/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.cypher;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Multi Part Query</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.cypher.MultiPartQuery#getSubQueries <em>Sub Queries</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.cypher.MultiPartQuery#getSinglePartQuery <em>Single Part Query</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.cypher.CypherPackage#getMultiPartQuery()
 * @model
 * @generated
 */
public interface MultiPartQuery extends SingleQuery
{
  /**
   * Returns the value of the '<em><b>Sub Queries</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.mydsl.cypher.MultiPartSubQuery}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sub Queries</em>' containment reference list.
   * @see org.xtext.example.mydsl.cypher.CypherPackage#getMultiPartQuery_SubQueries()
   * @model containment="true"
   * @generated
   */
  EList<MultiPartSubQuery> getSubQueries();

  /**
   * Returns the value of the '<em><b>Single Part Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Single Part Query</em>' containment reference.
   * @see #setSinglePartQuery(SinglePartQuery)
   * @see org.xtext.example.mydsl.cypher.CypherPackage#getMultiPartQuery_SinglePartQuery()
   * @model containment="true"
   * @generated
   */
  SinglePartQuery getSinglePartQuery();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.cypher.MultiPartQuery#getSinglePartQuery <em>Single Part Query</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Single Part Query</em>' containment reference.
   * @see #getSinglePartQuery()
   * @generated
   */
  void setSinglePartQuery(SinglePartQuery value);

} // MultiPartQuery
