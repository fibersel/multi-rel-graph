/*
 * generated by Xtext 2.27.0
 */
parser grammar InternalCypherParser;

options {
	tokenVocab=InternalCypherLexer;
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.CypherGrammarAccess;

}

@members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private CypherGrammarAccess grammarAccess;

    public InternalCypherParser(TokenStream input, CypherGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Cypher";
   	}

   	@Override
   	protected CypherGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleCypher
entryRuleCypher returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCypherRule()); }
	iv_ruleCypher=ruleCypher
	{ $current=$iv_ruleCypher.current; }
	EOF;

// Rule Cypher
ruleCypher returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCypherAccess().getCypherAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCypherAccess().getQueryOptionsQueryOptionsParserRuleCall_1_0());
				}
				lv_queryOptions_1_0=ruleQueryOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCypherRule());
					}
					set(
						$current,
						"queryOptions",
						lv_queryOptions_1_0,
						"org.xtext.example.mydsl.Cypher.QueryOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCypherAccess().getStatementsStatementParserRuleCall_2_0_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCypherRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"org.xtext.example.mydsl.Cypher.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Semicolon
				{
					newLeafNode(otherlv_3, grammarAccess.getCypherAccess().getSemicolonKeyword_2_1());
				}
			)?
		)*
	)
;

// Entry rule entryRuleQueryOptions
entryRuleQueryOptions returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getQueryOptionsRule()); }
	iv_ruleQueryOptions=ruleQueryOptions
	{ $current=$iv_ruleQueryOptions.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule QueryOptions
ruleQueryOptions returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getQueryOptionsAccess().getAllOptionsAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									lv_explain_2_0=EXPLAIN
									{
										newLeafNode(lv_explain_2_0, grammarAccess.getQueryOptionsAccess().getExplainEXPLAINKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getQueryOptionsRule());
										}
										setWithLastConsumed($current, "explain", lv_explain_2_0 != null, "EXPLAIN");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									lv_profile_3_0=PROFILE
									{
										newLeafNode(lv_profile_3_0, grammarAccess.getQueryOptionsAccess().getProfilePROFILEKeyword_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getQueryOptionsRule());
										}
										setWithLastConsumed($current, "profile", lv_profile_3_0 != null, "PROFILE");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getQueryOptionsAccess().getCypherOptionCypherOptionParserRuleCall_1_2_0());
									}
									lv_cypherOption_4_0=ruleCypherOption
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getQueryOptionsRule());
										}
										add(
											$current,
											"cypherOption",
											lv_cypherOption_4_0,
											"org.xtext.example.mydsl.Cypher.CypherOption");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getQueryOptionsAccess().getUnorderedGroup_1());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleCypherOption
entryRuleCypherOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCypherOptionRule()); }
	iv_ruleCypherOption=ruleCypherOption
	{ $current=$iv_ruleCypherOption.current; }
	EOF;

// Rule CypherOption
ruleCypherOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCypherOptionAccess().getCypherOptionAction_0(),
					$current);
			}
		)
		otherlv_1=CYPHER
		{
			newLeafNode(otherlv_1, grammarAccess.getCypherOptionAccess().getCYPHERKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCypherOptionAccess().getVersionNumberVersionNumberParserRuleCall_2_0());
				}
				lv_versionNumber_2_0=ruleVersionNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCypherOptionRule());
					}
					set(
						$current,
						"versionNumber",
						lv_versionNumber_2_0,
						"org.xtext.example.mydsl.Cypher.VersionNumber");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCypherOptionAccess().getConfigurationOptionConfigurationOptionParserRuleCall_3_0());
				}
				lv_configurationOption_3_0=ruleConfigurationOption
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCypherOptionRule());
					}
					add(
						$current,
						"configurationOption",
						lv_configurationOption_3_0,
						"org.xtext.example.mydsl.Cypher.ConfigurationOption");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionNumberRule()); }
	iv_ruleVersionNumber=ruleVersionNumber
	{ $current=$iv_ruleVersionNumber.current; }
	EOF;

// Rule VersionNumber
ruleVersionNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVersionNumberAccess().getVersionNumberNumberParserRuleCall_0());
			}
			lv_versionNumber_0_0=ruleNumber
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVersionNumberRule());
				}
				set(
					$current,
					"versionNumber",
					lv_versionNumber_0_0,
					"org.xtext.example.mydsl.Cypher.Number");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConfigurationOption
entryRuleConfigurationOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationOptionRule()); }
	iv_ruleConfigurationOption=ruleConfigurationOption
	{ $current=$iv_ruleConfigurationOption.current; }
	EOF;

// Rule ConfigurationOption
ruleConfigurationOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationOptionAccess().getKeySYMBOLIC_NAME_XParserRuleCall_0_0());
				}
				lv_key_0_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationOptionRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=EqualsSign
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationOptionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationOptionAccess().getValueSYMBOLIC_NAME_XParserRuleCall_2_0());
				}
				lv_value_2_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationOptionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCommandParserRuleCall_0());
		}
		this_Command_0=ruleCommand
		{
			$current = $this_Command_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getQueryParserRuleCall_1());
		}
		this_Query_1=ruleQuery
		{
			$current = $this_Query_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQueryAccess().getRegularQueryParserRuleCall_0());
		}
		this_RegularQuery_0=ruleRegularQuery
		{
			$current = $this_RegularQuery_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQueryAccess().getStandaloneCallParserRuleCall_1());
		}
		this_StandaloneCall_1=ruleStandaloneCall
		{
			$current = $this_StandaloneCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQueryAccess().getBulkImportQueryParserRuleCall_2());
		}
		this_BulkImportQuery_2=ruleBulkImportQuery
		{
			$current = $this_BulkImportQuery_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRegularQuery
entryRuleRegularQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularQueryRule()); }
	iv_ruleRegularQuery=ruleRegularQuery
	{ $current=$iv_ruleRegularQuery.current; }
	EOF;

// Rule RegularQuery
ruleRegularQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRegularQueryAccess().getSingleQueryParserRuleCall_0());
		}
		this_SingleQuery_0=ruleSingleQuery
		{
			$current = $this_SingleQuery_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRegularQueryAccess().getCombinedQuerySingleQueryAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularQueryAccess().getUnionUnionParserRuleCall_1_1_0());
					}
					lv_union_2_0=ruleUnion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularQueryRule());
						}
						add(
							$current,
							"union",
							lv_union_2_0,
							"org.xtext.example.mydsl.Cypher.Union");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleBulkImportQuery
entryRuleBulkImportQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBulkImportQueryRule()); }
	iv_ruleBulkImportQuery=ruleBulkImportQuery
	{ $current=$iv_ruleBulkImportQuery.current; }
	EOF;

// Rule BulkImportQuery
ruleBulkImportQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBulkImportQueryAccess().getPeriodicCommitHintPeriodicCommitHintParserRuleCall_0_0());
				}
				lv_periodicCommitHint_0_0=rulePeriodicCommitHint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBulkImportQueryRule());
					}
					set(
						$current,
						"periodicCommitHint",
						lv_periodicCommitHint_0_0,
						"org.xtext.example.mydsl.Cypher.PeriodicCommitHint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBulkImportQueryAccess().getLoadCSVQueryLoadCSVQueryParserRuleCall_1_0());
				}
				lv_loadCSVQuery_1_0=ruleLoadCSVQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBulkImportQueryRule());
					}
					set(
						$current,
						"loadCSVQuery",
						lv_loadCSVQuery_1_0,
						"org.xtext.example.mydsl.Cypher.LoadCSVQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePeriodicCommitHint
entryRulePeriodicCommitHint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodicCommitHintRule()); }
	iv_rulePeriodicCommitHint=rulePeriodicCommitHint
	{ $current=$iv_rulePeriodicCommitHint.current; }
	EOF;

// Rule PeriodicCommitHint
rulePeriodicCommitHint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPeriodicCommitHintAccess().getPeriodicCommitHintAction_0(),
					$current);
			}
		)
		otherlv_1=USING
		{
			newLeafNode(otherlv_1, grammarAccess.getPeriodicCommitHintAccess().getUSINGKeyword_1());
		}
		otherlv_2=PERIODIC
		{
			newLeafNode(otherlv_2, grammarAccess.getPeriodicCommitHintAccess().getPERIODICKeyword_2());
		}
		otherlv_3=COMMIT
		{
			newLeafNode(otherlv_3, grammarAccess.getPeriodicCommitHintAccess().getCOMMITKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicCommitHintAccess().getNumberOfRowsPerCommitDecimalIntegerParserRuleCall_4_0());
				}
				lv_numberOfRowsPerCommit_4_0=ruleDecimalInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicCommitHintRule());
					}
					set(
						$current,
						"numberOfRowsPerCommit",
						lv_numberOfRowsPerCommit_4_0,
						"org.xtext.example.mydsl.Cypher.DecimalInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLoadCSVQuery
entryRuleLoadCSVQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadCSVQueryRule()); }
	iv_ruleLoadCSVQuery=ruleLoadCSVQuery
	{ $current=$iv_ruleLoadCSVQuery.current; }
	EOF;

// Rule LoadCSVQuery
ruleLoadCSVQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCSVQueryAccess().getLoadCSVLoadCSVParserRuleCall_0_0());
				}
				lv_loadCSV_0_0=ruleLoadCSV
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCSVQueryRule());
					}
					set(
						$current,
						"loadCSV",
						lv_loadCSV_0_0,
						"org.xtext.example.mydsl.Cypher.LoadCSV");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCSVQueryAccess().getSingleQuerySingleQueryParserRuleCall_1_0());
				}
				lv_singleQuery_1_0=ruleSingleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCSVQueryRule());
					}
					set(
						$current,
						"singleQuery",
						lv_singleQuery_1_0,
						"org.xtext.example.mydsl.Cypher.SingleQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnion
entryRuleUnion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionRule()); }
	iv_ruleUnion=ruleUnion
	{ $current=$iv_ruleUnion.current; }
	EOF;

// Rule Union
ruleUnion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=UNION
		{
			newLeafNode(otherlv_0, grammarAccess.getUnionAccess().getUNIONKeyword_0());
		}
		(
			(
				lv_all_1_0=ALL
				{
					newLeafNode(lv_all_1_0, grammarAccess.getUnionAccess().getAllALLKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnionRule());
					}
					setWithLastConsumed($current, "all", lv_all_1_0 != null, "ALL");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionAccess().getSingleQuerySingleQueryParserRuleCall_2_0());
				}
				lv_singleQuery_2_0=ruleSingleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionRule());
					}
					set(
						$current,
						"singleQuery",
						lv_singleQuery_2_0,
						"org.xtext.example.mydsl.Cypher.SingleQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSingleQuery
entryRuleSingleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleQueryRule()); }
	iv_ruleSingleQuery=ruleSingleQuery
	{ $current=$iv_ruleSingleQuery.current; }
	EOF;

// Rule SingleQuery
ruleSingleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSingleQueryAccess().getMultiPartQueryParserRuleCall_0());
		}
		this_MultiPartQuery_0=ruleMultiPartQuery
		{
			$current = $this_MultiPartQuery_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSingleQueryAccess().getSinglePartQueryParserRuleCall_1());
		}
		this_SinglePartQuery_1=ruleSinglePartQuery
		{
			$current = $this_SinglePartQuery_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSinglePartQuery
entryRuleSinglePartQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSinglePartQueryRule()); }
	iv_ruleSinglePartQuery=ruleSinglePartQuery
	{ $current=$iv_ruleSinglePartQuery.current; }
	EOF;

// Rule SinglePartQuery
ruleSinglePartQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSinglePartQueryAccess().getReadingClausesReadingClauseParserRuleCall_0_0_0());
					}
					lv_readingClauses_0_0=ruleReadingClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinglePartQueryRule());
						}
						add(
							$current,
							"readingClauses",
							lv_readingClauses_0_0,
							"org.xtext.example.mydsl.Cypher.ReadingClause");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getSinglePartQueryAccess().getReturnReturnParserRuleCall_0_1_0());
					}
					lv_return_1_0=ruleReturn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinglePartQueryRule());
						}
						set(
							$current,
							"return",
							lv_return_1_0,
							"org.xtext.example.mydsl.Cypher.Return");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSinglePartQueryAccess().getReadingClausesReadingClauseParserRuleCall_1_0_0());
					}
					lv_readingClauses_2_0=ruleReadingClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinglePartQueryRule());
						}
						add(
							$current,
							"readingClauses",
							lv_readingClauses_2_0,
							"org.xtext.example.mydsl.Cypher.ReadingClause");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getSinglePartQueryAccess().getUpdatingClausesUpdatingClauseParserRuleCall_1_1_0());
					}
					lv_updatingClauses_3_0=ruleUpdatingClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinglePartQueryRule());
						}
						add(
							$current,
							"updatingClauses",
							lv_updatingClauses_3_0,
							"org.xtext.example.mydsl.Cypher.UpdatingClause");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getSinglePartQueryAccess().getReturnReturnParserRuleCall_1_2_0());
					}
					lv_return_4_0=ruleReturn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinglePartQueryRule());
						}
						set(
							$current,
							"return",
							lv_return_4_0,
							"org.xtext.example.mydsl.Cypher.Return");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleMultiPartQuery
entryRuleMultiPartQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiPartQueryRule()); }
	iv_ruleMultiPartQuery=ruleMultiPartQuery
	{ $current=$iv_ruleMultiPartQuery.current; }
	EOF;

// Rule MultiPartQuery
ruleMultiPartQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiPartQueryAccess().getSubQueriesMultiPartSubQueryParserRuleCall_0_0());
				}
				lv_subQueries_0_0=ruleMultiPartSubQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiPartQueryRule());
					}
					add(
						$current,
						"subQueries",
						lv_subQueries_0_0,
						"org.xtext.example.mydsl.Cypher.MultiPartSubQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiPartQueryAccess().getSinglePartQuerySinglePartQueryParserRuleCall_1_0());
				}
				lv_singlePartQuery_1_0=ruleSinglePartQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiPartQueryRule());
					}
					set(
						$current,
						"singlePartQuery",
						lv_singlePartQuery_1_0,
						"org.xtext.example.mydsl.Cypher.SinglePartQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiPartSubQuery
entryRuleMultiPartSubQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiPartSubQueryRule()); }
	iv_ruleMultiPartSubQuery=ruleMultiPartSubQuery
	{ $current=$iv_ruleMultiPartSubQuery.current; }
	EOF;

// Rule MultiPartSubQuery
ruleMultiPartSubQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiPartSubQueryAccess().getReadingClausesReadingClauseParserRuleCall_0_0());
				}
				lv_readingClauses_0_0=ruleReadingClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiPartSubQueryRule());
					}
					add(
						$current,
						"readingClauses",
						lv_readingClauses_0_0,
						"org.xtext.example.mydsl.Cypher.ReadingClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiPartSubQueryAccess().getUpdatingClausesUpdatingClauseParserRuleCall_1_0());
				}
				lv_updatingClauses_1_0=ruleUpdatingClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiPartSubQueryRule());
					}
					add(
						$current,
						"updatingClauses",
						lv_updatingClauses_1_0,
						"org.xtext.example.mydsl.Cypher.UpdatingClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiPartSubQueryAccess().getWithPartWithParserRuleCall_2_0());
				}
				lv_withPart_2_0=ruleWith
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiPartSubQueryRule());
					}
					set(
						$current,
						"withPart",
						lv_withPart_2_0,
						"org.xtext.example.mydsl.Cypher.With");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpdatingClause
entryRuleUpdatingClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdatingClauseRule()); }
	iv_ruleUpdatingClause=ruleUpdatingClause
	{ $current=$iv_ruleUpdatingClause.current; }
	EOF;

// Rule UpdatingClause
ruleUpdatingClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getCreateParserRuleCall_0());
		}
		this_Create_0=ruleCreate
		{
			$current = $this_Create_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getMergeParserRuleCall_1());
		}
		this_Merge_1=ruleMerge
		{
			$current = $this_Merge_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getForeachParserRuleCall_2());
		}
		this_Foreach_2=ruleForeach
		{
			$current = $this_Foreach_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getDeleteParserRuleCall_3());
		}
		this_Delete_3=ruleDelete
		{
			$current = $this_Delete_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getSetParserRuleCall_4());
		}
		this_Set_4=ruleSet
		{
			$current = $this_Set_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUpdatingClauseAccess().getRemoveParserRuleCall_5());
		}
		this_Remove_5=ruleRemove
		{
			$current = $this_Remove_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReadingClause
entryRuleReadingClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadingClauseRule()); }
	iv_ruleReadingClause=ruleReadingClause
	{ $current=$iv_ruleReadingClause.current; }
	EOF;

// Rule ReadingClause
ruleReadingClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getReadingClauseAccess().getLoadCSVParserRuleCall_0());
		}
		this_LoadCSV_0=ruleLoadCSV
		{
			$current = $this_LoadCSV_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getReadingClauseAccess().getStartParserRuleCall_1());
		}
		this_Start_1=ruleStart
		{
			$current = $this_Start_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getReadingClauseAccess().getMatchParserRuleCall_2());
		}
		this_Match_2=ruleMatch
		{
			$current = $this_Match_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getReadingClauseAccess().getUnwindParserRuleCall_3());
		}
		this_Unwind_3=ruleUnwind
		{
			$current = $this_Unwind_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getReadingClauseAccess().getInQueryCallParserRuleCall_4());
		}
		this_InQueryCall_4=ruleInQueryCall
		{
			$current = $this_InQueryCall_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getCreateIndexParserRuleCall_0());
		}
		this_CreateIndex_0=ruleCreateIndex
		{
			$current = $this_CreateIndex_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropIndexParserRuleCall_1());
		}
		this_DropIndex_1=ruleDropIndex
		{
			$current = $this_DropIndex_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getCreateUniqueConstraintParserRuleCall_2());
		}
		this_CreateUniqueConstraint_2=ruleCreateUniqueConstraint
		{
			$current = $this_CreateUniqueConstraint_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropUniqueConstraintParserRuleCall_3());
		}
		this_DropUniqueConstraint_3=ruleDropUniqueConstraint
		{
			$current = $this_DropUniqueConstraint_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getCreateNodePropertyExistenceConstraintParserRuleCall_4());
		}
		this_CreateNodePropertyExistenceConstraint_4=ruleCreateNodePropertyExistenceConstraint
		{
			$current = $this_CreateNodePropertyExistenceConstraint_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropNodePropertyExistenceConstraintParserRuleCall_5());
		}
		this_DropNodePropertyExistenceConstraint_5=ruleDropNodePropertyExistenceConstraint
		{
			$current = $this_DropNodePropertyExistenceConstraint_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getCreateRelationshipPropertyExistenceConstraintParserRuleCall_6());
		}
		this_CreateRelationshipPropertyExistenceConstraint_6=ruleCreateRelationshipPropertyExistenceConstraint
		{
			$current = $this_CreateRelationshipPropertyExistenceConstraint_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropRelationshipPropertyExistenceConstraintParserRuleCall_7());
		}
		this_DropRelationshipPropertyExistenceConstraint_7=ruleDropRelationshipPropertyExistenceConstraint
		{
			$current = $this_DropRelationshipPropertyExistenceConstraint_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateUniqueConstraint
entryRuleCreateUniqueConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateUniqueConstraintRule()); }
	iv_ruleCreateUniqueConstraint=ruleCreateUniqueConstraint
	{ $current=$iv_ruleCreateUniqueConstraint.current; }
	EOF;

// Rule CreateUniqueConstraint
ruleCreateUniqueConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CREATE
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateUniqueConstraintAccess().getCREATEKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCreateUniqueConstraintAccess().getUniqueConstraintParserRuleCall_1());
		}
		this_UniqueConstraint_1=ruleUniqueConstraint
		{
			$current = $this_UniqueConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateNodePropertyExistenceConstraint
entryRuleCreateNodePropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateNodePropertyExistenceConstraintRule()); }
	iv_ruleCreateNodePropertyExistenceConstraint=ruleCreateNodePropertyExistenceConstraint
	{ $current=$iv_ruleCreateNodePropertyExistenceConstraint.current; }
	EOF;

// Rule CreateNodePropertyExistenceConstraint
ruleCreateNodePropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CREATE
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateNodePropertyExistenceConstraintAccess().getCREATEKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCreateNodePropertyExistenceConstraintAccess().getNodePropertyExistenceConstraintParserRuleCall_1());
		}
		this_NodePropertyExistenceConstraint_1=ruleNodePropertyExistenceConstraint
		{
			$current = $this_NodePropertyExistenceConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateRelationshipPropertyExistenceConstraint
entryRuleCreateRelationshipPropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRelationshipPropertyExistenceConstraintRule()); }
	iv_ruleCreateRelationshipPropertyExistenceConstraint=ruleCreateRelationshipPropertyExistenceConstraint
	{ $current=$iv_ruleCreateRelationshipPropertyExistenceConstraint.current; }
	EOF;

// Rule CreateRelationshipPropertyExistenceConstraint
ruleCreateRelationshipPropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CREATE
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateRelationshipPropertyExistenceConstraintAccess().getCREATEKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCreateRelationshipPropertyExistenceConstraintAccess().getRelationshipPropertyExistenceConstraintParserRuleCall_1());
		}
		this_RelationshipPropertyExistenceConstraint_1=ruleRelationshipPropertyExistenceConstraint
		{
			$current = $this_RelationshipPropertyExistenceConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateIndex
entryRuleCreateIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateIndexRule()); }
	iv_ruleCreateIndex=ruleCreateIndex
	{ $current=$iv_ruleCreateIndex.current; }
	EOF;

// Rule CreateIndex
ruleCreateIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CREATE
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateIndexAccess().getCREATEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateIndexAccess().getIndexIndexParserRuleCall_1_0());
				}
				lv_index_1_0=ruleIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateIndexRule());
					}
					set(
						$current,
						"index",
						lv_index_1_0,
						"org.xtext.example.mydsl.Cypher.Index");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDropUniqueConstraint
entryRuleDropUniqueConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropUniqueConstraintRule()); }
	iv_ruleDropUniqueConstraint=ruleDropUniqueConstraint
	{ $current=$iv_ruleDropUniqueConstraint.current; }
	EOF;

// Rule DropUniqueConstraint
ruleDropUniqueConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DROP
		{
			newLeafNode(otherlv_0, grammarAccess.getDropUniqueConstraintAccess().getDROPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropUniqueConstraintAccess().getUniqueConstraintUniqueConstraintParserRuleCall_1_0());
				}
				lv_uniqueConstraint_1_0=ruleUniqueConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropUniqueConstraintRule());
					}
					set(
						$current,
						"uniqueConstraint",
						lv_uniqueConstraint_1_0,
						"org.xtext.example.mydsl.Cypher.UniqueConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDropNodePropertyExistenceConstraint
entryRuleDropNodePropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropNodePropertyExistenceConstraintRule()); }
	iv_ruleDropNodePropertyExistenceConstraint=ruleDropNodePropertyExistenceConstraint
	{ $current=$iv_ruleDropNodePropertyExistenceConstraint.current; }
	EOF;

// Rule DropNodePropertyExistenceConstraint
ruleDropNodePropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DROP
		{
			newLeafNode(otherlv_0, grammarAccess.getDropNodePropertyExistenceConstraintAccess().getDROPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropNodePropertyExistenceConstraintAccess().getNodePropertyExistenceConstraintNodePropertyExistenceConstraintParserRuleCall_1_0());
				}
				lv_nodePropertyExistenceConstraint_1_0=ruleNodePropertyExistenceConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropNodePropertyExistenceConstraintRule());
					}
					set(
						$current,
						"nodePropertyExistenceConstraint",
						lv_nodePropertyExistenceConstraint_1_0,
						"org.xtext.example.mydsl.Cypher.NodePropertyExistenceConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDropRelationshipPropertyExistenceConstraint
entryRuleDropRelationshipPropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropRelationshipPropertyExistenceConstraintRule()); }
	iv_ruleDropRelationshipPropertyExistenceConstraint=ruleDropRelationshipPropertyExistenceConstraint
	{ $current=$iv_ruleDropRelationshipPropertyExistenceConstraint.current; }
	EOF;

// Rule DropRelationshipPropertyExistenceConstraint
ruleDropRelationshipPropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DROP
		{
			newLeafNode(otherlv_0, grammarAccess.getDropRelationshipPropertyExistenceConstraintAccess().getDROPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropRelationshipPropertyExistenceConstraintAccess().getRelationshipPropertyExistenceConstraintRelationshipPropertyExistenceConstraintParserRuleCall_1_0());
				}
				lv_relationshipPropertyExistenceConstraint_1_0=ruleRelationshipPropertyExistenceConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropRelationshipPropertyExistenceConstraintRule());
					}
					set(
						$current,
						"relationshipPropertyExistenceConstraint",
						lv_relationshipPropertyExistenceConstraint_1_0,
						"org.xtext.example.mydsl.Cypher.RelationshipPropertyExistenceConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDropIndex
entryRuleDropIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropIndexRule()); }
	iv_ruleDropIndex=ruleDropIndex
	{ $current=$iv_ruleDropIndex.current; }
	EOF;

// Rule DropIndex
ruleDropIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DROP
		{
			newLeafNode(otherlv_0, grammarAccess.getDropIndexAccess().getDROPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropIndexAccess().getIndexIndexParserRuleCall_1_0());
				}
				lv_index_1_0=ruleIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropIndexRule());
					}
					set(
						$current,
						"index",
						lv_index_1_0,
						"org.xtext.example.mydsl.Cypher.Index");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=INDEX
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getINDEXKeyword_0());
		}
		otherlv_1=ON
		{
			newLeafNode(otherlv_1, grammarAccess.getIndexAccess().getONKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getNodeLabelNodeLabelParserRuleCall_2_0());
				}
				lv_nodeLabel_2_0=ruleNodeLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"nodeLabel",
						lv_nodeLabel_2_0,
						"org.xtext.example.mydsl.Cypher.NodeLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getIndexAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getPropertyKeyNamePropertyKeyNameParserRuleCall_4_0());
				}
				lv_propertyKeyName_4_0=rulePropertyKeyName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"propertyKeyName",
						lv_propertyKeyName_4_0,
						"org.xtext.example.mydsl.Cypher.PropertyKeyName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getIndexAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleUniqueConstraint
entryRuleUniqueConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueConstraintRule()); }
	iv_ruleUniqueConstraint=ruleUniqueConstraint
	{ $current=$iv_ruleUniqueConstraint.current; }
	EOF;

// Rule UniqueConstraint
ruleUniqueConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CONSTRAINT
		{
			newLeafNode(otherlv_0, grammarAccess.getUniqueConstraintAccess().getCONSTRAINTKeyword_0());
		}
		otherlv_1=ON
		{
			newLeafNode(otherlv_1, grammarAccess.getUniqueConstraintAccess().getONKeyword_1());
		}
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getUniqueConstraintAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueConstraintAccess().getVariableVariableDeclarationParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueConstraintRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueConstraintAccess().getNodeLabelNodeLabelParserRuleCall_4_0());
				}
				lv_nodeLabel_4_0=ruleNodeLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueConstraintRule());
					}
					set(
						$current,
						"nodeLabel",
						lv_nodeLabel_4_0,
						"org.xtext.example.mydsl.Cypher.NodeLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getUniqueConstraintAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=ASSERT
		{
			newLeafNode(otherlv_6, grammarAccess.getUniqueConstraintAccess().getASSERTKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueConstraintAccess().getPropertyExpressionPropertyExpressionParserRuleCall_7_0());
				}
				lv_propertyExpression_7_0=rulePropertyExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueConstraintRule());
					}
					set(
						$current,
						"propertyExpression",
						lv_propertyExpression_7_0,
						"org.xtext.example.mydsl.Cypher.PropertyExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=IS
		{
			newLeafNode(otherlv_8, grammarAccess.getUniqueConstraintAccess().getISKeyword_8());
		}
		otherlv_9=UNIQUE
		{
			newLeafNode(otherlv_9, grammarAccess.getUniqueConstraintAccess().getUNIQUEKeyword_9());
		}
	)
;

// Entry rule entryRuleNodePropertyExistenceConstraint
entryRuleNodePropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodePropertyExistenceConstraintRule()); }
	iv_ruleNodePropertyExistenceConstraint=ruleNodePropertyExistenceConstraint
	{ $current=$iv_ruleNodePropertyExistenceConstraint.current; }
	EOF;

// Rule NodePropertyExistenceConstraint
ruleNodePropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CONSTRAINT
		{
			newLeafNode(otherlv_0, grammarAccess.getNodePropertyExistenceConstraintAccess().getCONSTRAINTKeyword_0());
		}
		otherlv_1=ON
		{
			newLeafNode(otherlv_1, grammarAccess.getNodePropertyExistenceConstraintAccess().getONKeyword_1());
		}
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getNodePropertyExistenceConstraintAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePropertyExistenceConstraintAccess().getVariableVariableDeclarationParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePropertyExistenceConstraintRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePropertyExistenceConstraintAccess().getNodeLabelNodeLabelParserRuleCall_4_0());
				}
				lv_nodeLabel_4_0=ruleNodeLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePropertyExistenceConstraintRule());
					}
					set(
						$current,
						"nodeLabel",
						lv_nodeLabel_4_0,
						"org.xtext.example.mydsl.Cypher.NodeLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getNodePropertyExistenceConstraintAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=ASSERT
		{
			newLeafNode(otherlv_6, grammarAccess.getNodePropertyExistenceConstraintAccess().getASSERTKeyword_6());
		}
		otherlv_7=EXISTS
		{
			newLeafNode(otherlv_7, grammarAccess.getNodePropertyExistenceConstraintAccess().getEXISTSKeyword_7());
		}
		otherlv_8=LeftParenthesis
		{
			newLeafNode(otherlv_8, grammarAccess.getNodePropertyExistenceConstraintAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePropertyExistenceConstraintAccess().getPropertyExpressionPropertyExpressionParserRuleCall_9_0());
				}
				lv_propertyExpression_9_0=rulePropertyExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePropertyExistenceConstraintRule());
					}
					set(
						$current,
						"propertyExpression",
						lv_propertyExpression_9_0,
						"org.xtext.example.mydsl.Cypher.PropertyExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=RightParenthesis
		{
			newLeafNode(otherlv_10, grammarAccess.getNodePropertyExistenceConstraintAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleRelationshipPropertyExistenceConstraint
entryRuleRelationshipPropertyExistenceConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipPropertyExistenceConstraintRule()); }
	iv_ruleRelationshipPropertyExistenceConstraint=ruleRelationshipPropertyExistenceConstraint
	{ $current=$iv_ruleRelationshipPropertyExistenceConstraint.current; }
	EOF;

// Rule RelationshipPropertyExistenceConstraint
ruleRelationshipPropertyExistenceConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CONSTRAINT
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getCONSTRAINTKeyword_0());
		}
		otherlv_1=ON
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getONKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getRelationshipPatternRelationshipPatternSyntaxParserRuleCall_2_0());
				}
				lv_relationshipPattern_2_0=ruleRelationshipPatternSyntax
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPropertyExistenceConstraintRule());
					}
					set(
						$current,
						"relationshipPattern",
						lv_relationshipPattern_2_0,
						"org.xtext.example.mydsl.Cypher.RelationshipPatternSyntax");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=ASSERT
		{
			newLeafNode(otherlv_3, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getASSERTKeyword_3());
		}
		otherlv_4=EXISTS
		{
			newLeafNode(otherlv_4, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getEXISTSKeyword_4());
		}
		otherlv_5=LeftParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getPropertyExpressionPropertyExpressionParserRuleCall_6_0());
				}
				lv_propertyExpression_6_0=rulePropertyExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPropertyExistenceConstraintRule());
					}
					set(
						$current,
						"propertyExpression",
						lv_propertyExpression_6_0,
						"org.xtext.example.mydsl.Cypher.PropertyExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getRelationshipPropertyExistenceConstraintAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleRelationshipPatternSyntax
entryRuleRelationshipPatternSyntax returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipPatternSyntaxRule()); }
	iv_ruleRelationshipPatternSyntax=ruleRelationshipPatternSyntax
	{ $current=$iv_ruleRelationshipPatternSyntax.current; }
	EOF;

// Rule RelationshipPatternSyntax
ruleRelationshipPatternSyntax returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipPatternSyntaxAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1=RightParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationshipPatternSyntaxAccess().getRightParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getIncomingLeftArrowHeadParserRuleCall_2_0());
				}
				lv_incoming_2_0=ruleLeftArrowHead
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPatternSyntaxRule());
					}
					set(
						$current,
						"incoming",
						lv_incoming_2_0 != null,
						"org.xtext.example.mydsl.Cypher.LeftArrowHead");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getDashParserRuleCall_3());
		}
		ruleDash
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_4=LeftSquareBracket
		{
			newLeafNode(otherlv_4, grammarAccess.getRelationshipPatternSyntaxAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getVariableVariableDeclarationParserRuleCall_5_0());
				}
				lv_variable_5_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPatternSyntaxRule());
					}
					set(
						$current,
						"variable",
						lv_variable_5_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getRelTypeRelTypeParserRuleCall_6_0());
				}
				lv_relType_6_0=ruleRelType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPatternSyntaxRule());
					}
					set(
						$current,
						"relType",
						lv_relType_6_0,
						"org.xtext.example.mydsl.Cypher.RelType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=RightSquareBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getRelationshipPatternSyntaxAccess().getRightSquareBracketKeyword_7());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getDashParserRuleCall_8());
		}
		ruleDash
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipPatternSyntaxAccess().getOutgoingRightArrowHeadParserRuleCall_9_0());
				}
				lv_outgoing_9_0=ruleRightArrowHead
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipPatternSyntaxRule());
					}
					set(
						$current,
						"outgoing",
						lv_outgoing_9_0 != null,
						"org.xtext.example.mydsl.Cypher.RightArrowHead");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_10=LeftParenthesis
		{
			newLeafNode(otherlv_10, grammarAccess.getRelationshipPatternSyntaxAccess().getLeftParenthesisKeyword_10());
		}
		otherlv_11=RightParenthesis
		{
			newLeafNode(otherlv_11, grammarAccess.getRelationshipPatternSyntaxAccess().getRightParenthesisKeyword_11());
		}
	)
;

// Entry rule entryRuleLoadCSV
entryRuleLoadCSV returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadCSVRule()); }
	iv_ruleLoadCSV=ruleLoadCSV
	{ $current=$iv_ruleLoadCSV.current; }
	EOF;

// Rule LoadCSV
ruleLoadCSV returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoadCSVAccess().getLoadCSVAction_0(),
					$current);
			}
		)
		otherlv_1=LOAD
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadCSVAccess().getLOADKeyword_1());
		}
		otherlv_2=CSV
		{
			newLeafNode(otherlv_2, grammarAccess.getLoadCSVAccess().getCSVKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCSVAccess().getWithHeadersLoadCSVWithHeadersParserRuleCall_3_0());
				}
				lv_withHeaders_3_0=ruleLoadCSVWithHeaders
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCSVRule());
					}
					set(
						$current,
						"withHeaders",
						lv_withHeaders_3_0 != null,
						"org.xtext.example.mydsl.Cypher.LoadCSVWithHeaders");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=FROM
		{
			newLeafNode(otherlv_4, grammarAccess.getLoadCSVAccess().getFROMKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCSVAccess().getExpressionExpressionParserRuleCall_5_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCSVRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=AS
		{
			newLeafNode(otherlv_6, grammarAccess.getLoadCSVAccess().getASKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadCSVAccess().getVariableVariableDeclarationParserRuleCall_7_0());
				}
				lv_variable_7_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadCSVRule());
					}
					set(
						$current,
						"variable",
						lv_variable_7_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=FIELDTERMINATOR
			{
				newLeafNode(otherlv_8, grammarAccess.getLoadCSVAccess().getFIELDTERMINATORKeyword_8_0());
			}
			(
				(
					lv_fieldterminator_9_0=RULE_STRING_LITERAL
					{
						newLeafNode(lv_fieldterminator_9_0, grammarAccess.getLoadCSVAccess().getFieldterminatorSTRING_LITERALTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoadCSVRule());
						}
						setWithLastConsumed(
							$current,
							"fieldterminator",
							lv_fieldterminator_9_0,
							"org.xtext.example.mydsl.Cypher.STRING_LITERAL");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLoadCSVWithHeaders
entryRuleLoadCSVWithHeaders returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLoadCSVWithHeadersRule()); }
	iv_ruleLoadCSVWithHeaders=ruleLoadCSVWithHeaders
	{ $current=$iv_ruleLoadCSVWithHeaders.current.getText(); }
	EOF;

// Rule LoadCSVWithHeaders
ruleLoadCSVWithHeaders returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=WITH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLoadCSVWithHeadersAccess().getWITHKeyword_0());
		}
		kw=HEADERS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLoadCSVWithHeadersAccess().getHEADERSKeyword_1());
		}
	)
;

// Entry rule entryRuleMatch
entryRuleMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchRule()); }
	iv_ruleMatch=ruleMatch
	{ $current=$iv_ruleMatch.current; }
	EOF;

// Rule Match
ruleMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_optional_0_0=OPTIONAL
				{
					newLeafNode(lv_optional_0_0, grammarAccess.getMatchAccess().getOptionalOPTIONALKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMatchRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_0_0 != null, "OPTIONAL");
				}
			)
		)?
		otherlv_1=MATCH
		{
			newLeafNode(otherlv_1, grammarAccess.getMatchAccess().getMATCHKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchAccess().getPatternPatternParserRuleCall_2_0());
				}
				lv_pattern_2_0=rulePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_2_0,
						"org.xtext.example.mydsl.Cypher.Pattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchAccess().getHintsHintParserRuleCall_3_0());
				}
				lv_hints_3_0=ruleHint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchRule());
					}
					add(
						$current,
						"hints",
						lv_hints_3_0,
						"org.xtext.example.mydsl.Cypher.Hint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchAccess().getWhereWhereParserRuleCall_4_0());
				}
				lv_where_4_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchRule());
					}
					set(
						$current,
						"where",
						lv_where_4_0,
						"org.xtext.example.mydsl.Cypher.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleUnwind
entryRuleUnwind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnwindRule()); }
	iv_ruleUnwind=ruleUnwind
	{ $current=$iv_ruleUnwind.current; }
	EOF;

// Rule Unwind
ruleUnwind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=UNWIND
		{
			newLeafNode(otherlv_0, grammarAccess.getUnwindAccess().getUNWINDKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnwindAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnwindRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=AS
		{
			newLeafNode(otherlv_2, grammarAccess.getUnwindAccess().getASKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnwindAccess().getVariableVariableDeclarationParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnwindRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMerge
entryRuleMerge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeRule()); }
	iv_ruleMerge=ruleMerge
	{ $current=$iv_ruleMerge.current; }
	EOF;

// Rule Merge
ruleMerge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=MERGE
		{
			newLeafNode(otherlv_0, grammarAccess.getMergeAccess().getMERGEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMergeAccess().getPatternPartPatternPartParserRuleCall_1_0());
				}
				lv_patternPart_1_0=rulePatternPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMergeRule());
					}
					set(
						$current,
						"patternPart",
						lv_patternPart_1_0,
						"org.xtext.example.mydsl.Cypher.PatternPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMergeAccess().getMergeActionsMergeActionParserRuleCall_2_0());
				}
				lv_mergeActions_2_0=ruleMergeAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMergeRule());
					}
					add(
						$current,
						"mergeActions",
						lv_mergeActions_2_0,
						"org.xtext.example.mydsl.Cypher.MergeAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleMergeAction
entryRuleMergeAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeActionRule()); }
	iv_ruleMergeAction=ruleMergeAction
	{ $current=$iv_ruleMergeAction.current; }
	EOF;

// Rule MergeAction
ruleMergeAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=ON
		{
			newLeafNode(otherlv_0, grammarAccess.getMergeActionAccess().getONKeyword_0());
		}
		(
			(
				(
					lv_action_1_1=MATCH
					{
						newLeafNode(lv_action_1_1, grammarAccess.getMergeActionAccess().getActionMATCHKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeActionRule());
						}
						setWithLastConsumed($current, "action", lv_action_1_1, null);
					}
					    |
					lv_action_1_2=CREATE
					{
						newLeafNode(lv_action_1_2, grammarAccess.getMergeActionAccess().getActionCREATEKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMergeActionRule());
						}
						setWithLastConsumed($current, "action", lv_action_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMergeActionAccess().getSetSetParserRuleCall_2_0());
				}
				lv_set_2_0=ruleSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMergeActionRule());
					}
					set(
						$current,
						"set",
						lv_set_2_0,
						"org.xtext.example.mydsl.Cypher.Set");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	iv_ruleCreate=ruleCreate
	{ $current=$iv_ruleCreate.current; }
	EOF;

// Rule Create
ruleCreate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CREATE
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateAccess().getCREATEKeyword_0());
		}
		(
			(
				lv_uniqueContraint_1_0=UNIQUE
				{
					newLeafNode(lv_uniqueContraint_1_0, grammarAccess.getCreateAccess().getUniqueContraintUNIQUEKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateRule());
					}
					setWithLastConsumed($current, "uniqueContraint", lv_uniqueContraint_1_0 != null, "UNIQUE");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAccess().getPatternPatternParserRuleCall_2_0());
				}
				lv_pattern_2_0=rulePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_2_0,
						"org.xtext.example.mydsl.Cypher.Pattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=SET
		{
			newLeafNode(otherlv_0, grammarAccess.getSetAccess().getSETKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getSetItemsSetItemParserRuleCall_1_0());
				}
				lv_setItems_1_0=ruleSetItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					add(
						$current,
						"setItems",
						lv_setItems_1_0,
						"org.xtext.example.mydsl.Cypher.SetItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getSetAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetAccess().getSetItemsSetItemParserRuleCall_2_1_0());
					}
					lv_setItems_3_0=ruleSetItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetRule());
						}
						add(
							$current,
							"setItems",
							lv_setItems_3_0,
							"org.xtext.example.mydsl.Cypher.SetItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSetItem
entryRuleSetItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetItemRule()); }
	iv_ruleSetItem=ruleSetItem
	{ $current=$iv_ruleSetItem.current; }
	EOF;

// Rule SetItem
ruleSetItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getPropertyExpressionPropertyExpressionParserRuleCall_0_0_0());
					}
					lv_propertyExpression_0_0=rulePropertyExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"propertyExpression",
							lv_propertyExpression_0_0,
							"org.xtext.example.mydsl.Cypher.PropertyExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=EqualsSign
			{
				newLeafNode(otherlv_1, grammarAccess.getSetItemAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getExpressionExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getVariableVariableDeclarationParserRuleCall_1_0_0());
					}
					lv_variable_3_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=EqualsSign
			{
				newLeafNode(otherlv_4, grammarAccess.getSetItemAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_expression_5_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getVariableVariableDeclarationParserRuleCall_2_0_0());
					}
					lv_variable_6_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"variable",
							lv_variable_6_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=PlusSignEqualsSign
			{
				newLeafNode(otherlv_7, grammarAccess.getSetItemAccess().getPlusSignEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getExpressionExpressionParserRuleCall_2_2_0());
					}
					lv_expression_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"expression",
							lv_expression_8_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetItemAccess().getVariableVariableDeclarationParserRuleCall_3_0_0());
					}
					lv_variable_9_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetItemRule());
						}
						set(
							$current,
							"variable",
							lv_variable_9_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSetItemRule());
				}
				newCompositeNode(grammarAccess.getSetItemAccess().getNodeLabelsParserRuleCall_3_1());
			}
			this_NodeLabels_10=ruleNodeLabels[$current]
			{
				$current = $this_NodeLabels_10.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_detach_0_0=DETACH
				{
					newLeafNode(lv_detach_0_0, grammarAccess.getDeleteAccess().getDetachDETACHKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteRule());
					}
					setWithLastConsumed($current, "detach", lv_detach_0_0 != null, "DETACH");
				}
			)
		)?
		otherlv_1=DELETE
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getDELETEKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getExpressionsExpressionParserRuleCall_2_0());
				}
				lv_expressions_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_2_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Comma
			{
				newLeafNode(otherlv_3, grammarAccess.getDeleteAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getExpressionsExpressionParserRuleCall_3_1_0());
					}
					lv_expressions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_4_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=REMOVE
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveAccess().getREMOVEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getRemoveItemsRemoveItemParserRuleCall_1_0());
				}
				lv_removeItems_1_0=ruleRemoveItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					add(
						$current,
						"removeItems",
						lv_removeItems_1_0,
						"org.xtext.example.mydsl.Cypher.RemoveItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getRemoveAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRemoveAccess().getRemoveItemsRemoveItemParserRuleCall_2_1_0());
					}
					lv_removeItems_3_0=ruleRemoveItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRemoveRule());
						}
						add(
							$current,
							"removeItems",
							lv_removeItems_3_0,
							"org.xtext.example.mydsl.Cypher.RemoveItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRemoveItem
entryRuleRemoveItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveItemRule()); }
	iv_ruleRemoveItem=ruleRemoveItem
	{ $current=$iv_ruleRemoveItem.current; }
	EOF;

// Rule RemoveItem
ruleRemoveItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRemoveItemAccess().getRemoveItemLabelAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRemoveItemAccess().getVariableVariableDeclarationParserRuleCall_0_1_0());
					}
					lv_variable_1_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRemoveItemRule());
						}
						set(
							$current,
							"variable",
							lv_variable_1_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRemoveItemRule());
				}
				newCompositeNode(grammarAccess.getRemoveItemAccess().getNodeLabelsParserRuleCall_0_2());
			}
			this_NodeLabels_2=ruleNodeLabels[$current]
			{
				$current = $this_NodeLabels_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getRemoveItemAccess().getRemoveItemPropertyAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRemoveItemAccess().getPropertyExpressionPropertyExpressionParserRuleCall_1_1_0());
					}
					lv_propertyExpression_4_0=rulePropertyExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRemoveItemRule());
						}
						set(
							$current,
							"propertyExpression",
							lv_propertyExpression_4_0,
							"org.xtext.example.mydsl.Cypher.PropertyExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleForeach
entryRuleForeach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeachRule()); }
	iv_ruleForeach=ruleForeach
	{ $current=$iv_ruleForeach.current; }
	EOF;

// Rule Foreach
ruleForeach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=FOREACH
		{
			newLeafNode(otherlv_0, grammarAccess.getForeachAccess().getFOREACHKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getForeachAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachAccess().getVariableVariableDeclarationParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=IN
		{
			newLeafNode(otherlv_3, grammarAccess.getForeachAccess().getINKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=VerticalLine
		{
			newLeafNode(otherlv_5, grammarAccess.getForeachAccess().getVerticalLineKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeachAccess().getUpdatingClausesUpdatingClauseParserRuleCall_6_0());
				}
				lv_updatingClauses_6_0=ruleUpdatingClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeachRule());
					}
					add(
						$current,
						"updatingClauses",
						lv_updatingClauses_6_0,
						"org.xtext.example.mydsl.Cypher.UpdatingClause");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getForeachAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleInQueryCall
entryRuleInQueryCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInQueryCallRule()); }
	iv_ruleInQueryCall=ruleInQueryCall
	{ $current=$iv_ruleInQueryCall.current; }
	EOF;

// Rule InQueryCall
ruleInQueryCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CALL
		{
			newLeafNode(otherlv_0, grammarAccess.getInQueryCallAccess().getCALLKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInQueryCallAccess().getInvocationExplicitProcedureInvocationParserRuleCall_1_0());
				}
				lv_invocation_1_0=ruleExplicitProcedureInvocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInQueryCallRule());
					}
					set(
						$current,
						"invocation",
						lv_invocation_1_0,
						"org.xtext.example.mydsl.Cypher.ExplicitProcedureInvocation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=YIELD
			{
				newLeafNode(otherlv_2, grammarAccess.getInQueryCallAccess().getYIELDKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInQueryCallAccess().getYieldItemsYieldItemsParserRuleCall_2_1_0());
					}
					lv_yieldItems_3_0=ruleYieldItems
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInQueryCallRule());
						}
						set(
							$current,
							"yieldItems",
							lv_yieldItems_3_0,
							"org.xtext.example.mydsl.Cypher.YieldItems");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleStandaloneCall
entryRuleStandaloneCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandaloneCallRule()); }
	iv_ruleStandaloneCall=ruleStandaloneCall
	{ $current=$iv_ruleStandaloneCall.current; }
	EOF;

// Rule StandaloneCall
ruleStandaloneCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CALL
		{
			newLeafNode(otherlv_0, grammarAccess.getStandaloneCallAccess().getCALLKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStandaloneCallAccess().getInvocationExplicitProcedureInvocationParserRuleCall_1_0_0());
					}
					lv_invocation_1_1=ruleExplicitProcedureInvocation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandaloneCallRule());
						}
						set(
							$current,
							"invocation",
							lv_invocation_1_1,
							"org.xtext.example.mydsl.Cypher.ExplicitProcedureInvocation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStandaloneCallAccess().getInvocationImplicitProcedureInvocationParserRuleCall_1_0_1());
					}
					lv_invocation_1_2=ruleImplicitProcedureInvocation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandaloneCallRule());
						}
						set(
							$current,
							"invocation",
							lv_invocation_1_2,
							"org.xtext.example.mydsl.Cypher.ImplicitProcedureInvocation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2=YIELD
			{
				newLeafNode(otherlv_2, grammarAccess.getStandaloneCallAccess().getYIELDKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStandaloneCallAccess().getYieldItemsYieldItemsParserRuleCall_2_1_0());
					}
					lv_yieldItems_3_0=ruleYieldItems
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandaloneCallRule());
						}
						set(
							$current,
							"yieldItems",
							lv_yieldItems_3_0,
							"org.xtext.example.mydsl.Cypher.YieldItems");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleYieldItems
entryRuleYieldItems returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getYieldItemsRule()); }
	iv_ruleYieldItems=ruleYieldItems
	{ $current=$iv_ruleYieldItems.current; }
	EOF;

// Rule YieldItems
ruleYieldItems returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getYieldItemsAccess().getYieldItemsAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getYieldItemsAccess().getItemsYieldItemParserRuleCall_1_0_0_0());
						}
						lv_items_1_0=ruleYieldItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getYieldItemsRule());
							}
							add(
								$current,
								"items",
								lv_items_1_0,
								"org.xtext.example.mydsl.Cypher.YieldItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=Comma
					{
						newLeafNode(otherlv_2, grammarAccess.getYieldItemsAccess().getCommaKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getYieldItemsAccess().getItemsYieldItemParserRuleCall_1_0_1_1_0());
							}
							lv_items_3_0=ruleYieldItem
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getYieldItemsRule());
								}
								add(
									$current,
									"items",
									lv_items_3_0,
									"org.xtext.example.mydsl.Cypher.YieldItem");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			otherlv_4=HyphenMinus
			{
				newLeafNode(otherlv_4, grammarAccess.getYieldItemsAccess().getHyphenMinusKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleYieldItem
entryRuleYieldItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getYieldItemRule()); }
	iv_ruleYieldItem=ruleYieldItem
	{ $current=$iv_ruleYieldItem.current; }
	EOF;

// Rule YieldItem
ruleYieldItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getYieldItemAccess().getFieldProcedureResultFieldParserRuleCall_0_0_0());
					}
					lv_field_0_0=ruleProcedureResultField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getYieldItemRule());
						}
						set(
							$current,
							"field",
							lv_field_0_0,
							"org.xtext.example.mydsl.Cypher.ProcedureResultField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=AS
			{
				newLeafNode(otherlv_1, grammarAccess.getYieldItemAccess().getASKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getYieldItemAccess().getVariableVariableDeclarationParserRuleCall_1_0());
				}
				lv_variable_2_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getYieldItemRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWith
entryRuleWith returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWithRule()); }
	iv_ruleWith=ruleWith
	{ $current=$iv_ruleWith.current; }
	EOF;

// Rule With
ruleWith returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=WITH
		{
			newLeafNode(otherlv_0, grammarAccess.getWithAccess().getWITHKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getReturnBodyReturnBodyParserRuleCall_1_0());
				}
				lv_returnBody_1_0=ruleReturnBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"returnBody",
						lv_returnBody_1_0,
						"org.xtext.example.mydsl.Cypher.ReturnBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getWhereWhereParserRuleCall_2_0());
				}
				lv_where_2_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"where",
						lv_where_2_0,
						"org.xtext.example.mydsl.Cypher.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	iv_ruleReturn=ruleReturn
	{ $current=$iv_ruleReturn.current; }
	EOF;

// Rule Return
ruleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_return_0_0=RETURN
				{
					newLeafNode(lv_return_0_0, grammarAccess.getReturnAccess().getReturnRETURNKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnRule());
					}
					setWithLastConsumed($current, "return", lv_return_0_0, "RETURN");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnAccess().getBodyReturnBodyParserRuleCall_1_0());
				}
				lv_body_1_0=ruleReturnBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.xtext.example.mydsl.Cypher.ReturnBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReturnBody
entryRuleReturnBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnBodyRule()); }
	iv_ruleReturnBody=ruleReturnBody
	{ $current=$iv_ruleReturnBody.current; }
	EOF;

// Rule ReturnBody
ruleReturnBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_distinct_0_0=DISTINCT
				{
					newLeafNode(lv_distinct_0_0, grammarAccess.getReturnBodyAccess().getDistinctDISTINCTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnBodyRule());
					}
					setWithLastConsumed($current, "distinct", lv_distinct_0_0 != null, "DISTINCT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnBodyAccess().getReturnItemsReturnItemsParserRuleCall_1_0());
				}
				lv_returnItems_1_0=ruleReturnItems
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnBodyRule());
					}
					set(
						$current,
						"returnItems",
						lv_returnItems_1_0,
						"org.xtext.example.mydsl.Cypher.ReturnItems");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnBodyAccess().getOrderOrderParserRuleCall_2_0());
				}
				lv_order_2_0=ruleOrder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnBodyRule());
					}
					set(
						$current,
						"order",
						lv_order_2_0,
						"org.xtext.example.mydsl.Cypher.Order");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnBodyAccess().getSkipSkipParserRuleCall_3_0());
				}
				lv_skip_3_0=ruleSkip
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnBodyRule());
					}
					set(
						$current,
						"skip",
						lv_skip_3_0,
						"org.xtext.example.mydsl.Cypher.Skip");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnBodyAccess().getLimitLimitParserRuleCall_4_0());
				}
				lv_limit_4_0=ruleLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnBodyRule());
					}
					set(
						$current,
						"limit",
						lv_limit_4_0,
						"org.xtext.example.mydsl.Cypher.Limit");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReturnItems
entryRuleReturnItems returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnItemsRule()); }
	iv_ruleReturnItems=ruleReturnItems
	{ $current=$iv_ruleReturnItems.current; }
	EOF;

// Rule ReturnItems
ruleReturnItems returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getReturnItemsAccess().getReturnItemsAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						lv_all_1_0=Asterisk
						{
							newLeafNode(lv_all_1_0, grammarAccess.getReturnItemsAccess().getAllAsteriskKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReturnItemsRule());
							}
							setWithLastConsumed($current, "all", lv_all_1_0, "*");
						}
					)
				)
				(
					otherlv_2=Comma
					{
						newLeafNode(otherlv_2, grammarAccess.getReturnItemsAccess().getCommaKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReturnItemsAccess().getItemsReturnItemParserRuleCall_0_1_1_1_0());
							}
							lv_items_3_0=ruleReturnItem
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReturnItemsRule());
								}
								add(
									$current,
									"items",
									lv_items_3_0,
									"org.xtext.example.mydsl.Cypher.ReturnItem");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getReturnItemsAccess().getItemsReturnItemParserRuleCall_1_0_0());
					}
					lv_items_4_0=ruleReturnItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReturnItemsRule());
						}
						add(
							$current,
							"items",
							lv_items_4_0,
							"org.xtext.example.mydsl.Cypher.ReturnItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getReturnItemsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReturnItemsAccess().getItemsReturnItemParserRuleCall_1_1_1_0());
						}
						lv_items_6_0=ruleReturnItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReturnItemsRule());
							}
							add(
								$current,
								"items",
								lv_items_6_0,
								"org.xtext.example.mydsl.Cypher.ReturnItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleReturnItem
entryRuleReturnItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnItemRule()); }
	iv_ruleReturnItem=ruleReturnItem
	{ $current=$iv_ruleReturnItem.current; }
	EOF;

// Rule ReturnItem
ruleReturnItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnItemAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnItemRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=AS
			{
				newLeafNode(otherlv_1, grammarAccess.getReturnItemAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReturnItemAccess().getAliasVariableDeclarationParserRuleCall_1_1_0());
					}
					lv_alias_2_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReturnItemRule());
						}
						set(
							$current,
							"alias",
							lv_alias_2_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrder
entryRuleOrder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderRule()); }
	iv_ruleOrder=ruleOrder
	{ $current=$iv_ruleOrder.current; }
	EOF;

// Rule Order
ruleOrder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=ORDER
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderAccess().getORDERKeyword_0());
		}
		otherlv_1=BY
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderAccess().getBYKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderAccess().getOrderBySortItemParserRuleCall_2_0());
				}
				lv_orderBy_2_0=ruleSortItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderRule());
					}
					add(
						$current,
						"orderBy",
						lv_orderBy_2_0,
						"org.xtext.example.mydsl.Cypher.SortItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Comma
			{
				newLeafNode(otherlv_3, grammarAccess.getOrderAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrderAccess().getOrderBySortItemParserRuleCall_3_1_0());
					}
					lv_orderBy_4_0=ruleSortItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrderRule());
						}
						add(
							$current,
							"orderBy",
							lv_orderBy_4_0,
							"org.xtext.example.mydsl.Cypher.SortItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSkip
entryRuleSkip returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipRule()); }
	iv_ruleSkip=ruleSkip
	{ $current=$iv_ruleSkip.current; }
	EOF;

// Rule Skip
ruleSkip returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=SKIP
		{
			newLeafNode(otherlv_0, grammarAccess.getSkipAccess().getSKIPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSkipAccess().getSkipExpressionParserRuleCall_1_0());
				}
				lv_skip_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSkipRule());
					}
					set(
						$current,
						"skip",
						lv_skip_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LIMIT
		{
			newLeafNode(otherlv_0, grammarAccess.getLimitAccess().getLIMITKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLimitAccess().getLimitExpressionParserRuleCall_1_0());
				}
				lv_limit_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLimitRule());
					}
					set(
						$current,
						"limit",
						lv_limit_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSortItem
entryRuleSortItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortItemRule()); }
	iv_ruleSortItem=ruleSortItem
	{ $current=$iv_ruleSortItem.current; }
	EOF;

// Rule SortItem
ruleSortItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSortItemAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortItemRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_sort_1_1=DESCENDING
					{
						newLeafNode(lv_sort_1_1, grammarAccess.getSortItemAccess().getSortDESCENDINGKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortItemRule());
						}
						setWithLastConsumed($current, "sort", lv_sort_1_1, null);
					}
					    |
					lv_sort_1_2=DESC
					{
						newLeafNode(lv_sort_1_2, grammarAccess.getSortItemAccess().getSortDESCKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortItemRule());
						}
						setWithLastConsumed($current, "sort", lv_sort_1_2, null);
					}
					    |
					lv_sort_1_3=ASCENDING
					{
						newLeafNode(lv_sort_1_3, grammarAccess.getSortItemAccess().getSortASCENDINGKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortItemRule());
						}
						setWithLastConsumed($current, "sort", lv_sort_1_3, null);
					}
					    |
					lv_sort_1_4=ASC
					{
						newLeafNode(lv_sort_1_4, grammarAccess.getSortItemAccess().getSortASCKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortItemRule());
						}
						setWithLastConsumed($current, "sort", lv_sort_1_4, null);
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleHint
entryRuleHint returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getHintRule()); }
	iv_ruleHint=ruleHint
	{ $current=$iv_ruleHint.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Hint
ruleHint returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getHintAccess().getIndexHintAction_0_0(),
						$current);
				}
			)
			otherlv_1=USING
			{
				newLeafNode(otherlv_1, grammarAccess.getHintAccess().getUSINGKeyword_0_1());
			}
			this_WS_2=RULE_WS
			{
				newLeafNode(this_WS_2, grammarAccess.getHintAccess().getWSTerminalRuleCall_0_2());
			}
			otherlv_3=INDEX
			{
				newLeafNode(otherlv_3, grammarAccess.getHintAccess().getINDEXKeyword_0_3());
			}
			this_WS_4=RULE_WS
			{
				newLeafNode(this_WS_4, grammarAccess.getHintAccess().getWSTerminalRuleCall_0_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHintAccess().getVariableVariableDeclarationParserRuleCall_0_5_0());
					}
					lv_variable_5_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHintRule());
						}
						set(
							$current,
							"variable",
							lv_variable_5_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getHintAccess().getNodeLabelNodeLabelParserRuleCall_0_6_0());
					}
					lv_nodeLabel_6_0=ruleNodeLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHintRule());
						}
						set(
							$current,
							"nodeLabel",
							lv_nodeLabel_6_0,
							"org.xtext.example.mydsl.Cypher.NodeLabel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_WS_7=RULE_WS
			{
				newLeafNode(this_WS_7, grammarAccess.getHintAccess().getWSTerminalRuleCall_0_7());
			}
			otherlv_8=LeftParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getHintAccess().getLeftParenthesisKeyword_0_8());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHintAccess().getPropertyKeyNamePropertyKeyNameParserRuleCall_0_9_0());
					}
					lv_propertyKeyName_9_0=rulePropertyKeyName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHintRule());
						}
						set(
							$current,
							"propertyKeyName",
							lv_propertyKeyName_9_0,
							"org.xtext.example.mydsl.Cypher.PropertyKeyName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=RightParenthesis
			{
				newLeafNode(otherlv_10, grammarAccess.getHintAccess().getRightParenthesisKeyword_0_10());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getHintAccess().getJoinHintAction_1_0(),
						$current);
				}
			)
			(
				otherlv_12=USING
				{
					newLeafNode(otherlv_12, grammarAccess.getHintAccess().getUSINGKeyword_1_1_0());
				}
				this_WS_13=RULE_WS
				{
					newLeafNode(this_WS_13, grammarAccess.getHintAccess().getWSTerminalRuleCall_1_1_1());
				}
				otherlv_14=JOIN
				{
					newLeafNode(otherlv_14, grammarAccess.getHintAccess().getJOINKeyword_1_1_2());
				}
				this_WS_15=RULE_WS
				{
					newLeafNode(this_WS_15, grammarAccess.getHintAccess().getWSTerminalRuleCall_1_1_3());
				}
				otherlv_16=ON
				{
					newLeafNode(otherlv_16, grammarAccess.getHintAccess().getONKeyword_1_1_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHintAccess().getVariablesVariableDeclarationParserRuleCall_1_1_5_0());
						}
						lv_variables_17_0=ruleVariableDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHintRule());
							}
							add(
								$current,
								"variables",
								lv_variables_17_0,
								"org.xtext.example.mydsl.Cypher.VariableDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_18=Comma
					{
						newLeafNode(otherlv_18, grammarAccess.getHintAccess().getCommaKeyword_1_1_6_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getHintAccess().getVariablesVariableDeclarationParserRuleCall_1_1_6_1_0());
							}
							lv_variables_19_0=ruleVariableDeclaration
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getHintRule());
								}
								add(
									$current,
									"variables",
									lv_variables_19_0,
									"org.xtext.example.mydsl.Cypher.VariableDeclaration");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getHintAccess().getScanHintAction_2_0(),
						$current);
				}
			)
			(
				otherlv_21=USING
				{
					newLeafNode(otherlv_21, grammarAccess.getHintAccess().getUSINGKeyword_2_1_0());
				}
				this_WS_22=RULE_WS
				{
					newLeafNode(this_WS_22, grammarAccess.getHintAccess().getWSTerminalRuleCall_2_1_1());
				}
				otherlv_23=SCAN
				{
					newLeafNode(otherlv_23, grammarAccess.getHintAccess().getSCANKeyword_2_1_2());
				}
				this_WS_24=RULE_WS
				{
					newLeafNode(this_WS_24, grammarAccess.getHintAccess().getWSTerminalRuleCall_2_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHintAccess().getVariableVariableDeclarationParserRuleCall_2_1_4_0());
						}
						lv_variable_25_0=ruleVariableDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHintRule());
							}
							set(
								$current,
								"variable",
								lv_variable_25_0,
								"org.xtext.example.mydsl.Cypher.VariableDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getHintAccess().getNodeLabelNodeLabelParserRuleCall_2_1_5_0());
						}
						lv_nodeLabel_26_0=ruleNodeLabel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHintRule());
							}
							set(
								$current,
								"nodeLabel",
								lv_nodeLabel_26_0,
								"org.xtext.example.mydsl.Cypher.NodeLabel");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	iv_ruleStart=ruleStart
	{ $current=$iv_ruleStart.current; }
	EOF;

// Rule Start
ruleStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=START
		{
			newLeafNode(otherlv_0, grammarAccess.getStartAccess().getSTARTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getStartPointStartPointParserRuleCall_1_0());
				}
				lv_startPoint_1_0=ruleStartPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					add(
						$current,
						"startPoint",
						lv_startPoint_1_0,
						"org.xtext.example.mydsl.Cypher.StartPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getStartAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStartAccess().getStartPointStartPointParserRuleCall_2_1_0());
					}
					lv_startPoint_3_0=ruleStartPoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartRule());
						}
						add(
							$current,
							"startPoint",
							lv_startPoint_3_0,
							"org.xtext.example.mydsl.Cypher.StartPoint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getWhereWhereParserRuleCall_3_0());
				}
				lv_where_4_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					set(
						$current,
						"where",
						lv_where_4_0,
						"org.xtext.example.mydsl.Cypher.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStartPoint
entryRuleStartPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartPointRule()); }
	iv_ruleStartPoint=ruleStartPoint
	{ $current=$iv_ruleStartPoint.current; }
	EOF;

// Rule StartPoint
ruleStartPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStartPointAccess().getVariableVariableDeclarationParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartPointRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=EqualsSign
		{
			newLeafNode(otherlv_1, grammarAccess.getStartPointAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartPointAccess().getLookupLookupParserRuleCall_2_0());
				}
				lv_lookup_2_0=ruleLookup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartPointRule());
					}
					set(
						$current,
						"lookup",
						lv_lookup_2_0,
						"org.xtext.example.mydsl.Cypher.Lookup");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLookup
entryRuleLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupRule()); }
	iv_ruleLookup=ruleLookup
	{ $current=$iv_ruleLookup.current; }
	EOF;

// Rule Lookup
ruleLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLookupAccess().getNodeLookupParserRuleCall_0());
		}
		this_NodeLookup_0=ruleNodeLookup
		{
			$current = $this_NodeLookup_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLookupAccess().getRelationshipLookupParserRuleCall_1());
		}
		this_RelationshipLookup_1=ruleRelationshipLookup
		{
			$current = $this_RelationshipLookup_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNodeLookup
entryRuleNodeLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeLookupRule()); }
	iv_ruleNodeLookup=ruleNodeLookup
	{ $current=$iv_ruleNodeLookup.current; }
	EOF;

// Rule NodeLookup
ruleNodeLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NODE
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeLookupAccess().getNODEKeyword_0());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getNodeLookupAccess().getIdentifiedIndexLookupParserRuleCall_1_0());
			}
			this_IdentifiedIndexLookup_1=ruleIdentifiedIndexLookup
			{
				$current = $this_IdentifiedIndexLookup_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getNodeLookupAccess().getIndexQueryParserRuleCall_1_1());
			}
			this_IndexQuery_2=ruleIndexQuery
			{
				$current = $this_IndexQuery_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getNodeLookupAccess().getIdLookupParserRuleCall_1_2());
			}
			this_IdLookup_3=ruleIdLookup
			{
				$current = $this_IdLookup_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRelationshipLookup
entryRuleRelationshipLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipLookupRule()); }
	iv_ruleRelationshipLookup=ruleRelationshipLookup
	{ $current=$iv_ruleRelationshipLookup.current; }
	EOF;

// Rule RelationshipLookup
ruleRelationshipLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=RELATIONSHIP
			{
				newLeafNode(otherlv_0, grammarAccess.getRelationshipLookupAccess().getRELATIONSHIPKeyword_0_0());
			}
			    |
			otherlv_1=REL
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationshipLookupAccess().getRELKeyword_0_1());
			}
		)
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getRelationshipLookupAccess().getIdentifiedIndexLookupParserRuleCall_1_0());
			}
			this_IdentifiedIndexLookup_2=ruleIdentifiedIndexLookup
			{
				$current = $this_IdentifiedIndexLookup_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getRelationshipLookupAccess().getIndexQueryParserRuleCall_1_1());
			}
			this_IndexQuery_3=ruleIndexQuery
			{
				$current = $this_IndexQuery_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getRelationshipLookupAccess().getIdLookupParserRuleCall_1_2());
			}
			this_IdLookup_4=ruleIdLookup
			{
				$current = $this_IdLookup_4.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIdentifiedIndexLookup
entryRuleIdentifiedIndexLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifiedIndexLookupRule()); }
	iv_ruleIdentifiedIndexLookup=ruleIdentifiedIndexLookup
	{ $current=$iv_ruleIdentifiedIndexLookup.current; }
	EOF;

// Rule IdentifiedIndexLookup
ruleIdentifiedIndexLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Colon
		{
			newLeafNode(otherlv_0, grammarAccess.getIdentifiedIndexLookupAccess().getColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifiedIndexLookupAccess().getIndexNameSYMBOLIC_NAME_XParserRuleCall_1_0());
				}
				lv_indexName_1_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifiedIndexLookupRule());
					}
					set(
						$current,
						"indexName",
						lv_indexName_1_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getIdentifiedIndexLookupAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifiedIndexLookupAccess().getKeySYMBOLIC_NAME_XParserRuleCall_3_0());
				}
				lv_key_3_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifiedIndexLookupRule());
					}
					set(
						$current,
						"key",
						lv_key_3_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=EqualsSign
		{
			newLeafNode(otherlv_4, grammarAccess.getIdentifiedIndexLookupAccess().getEqualsSignKeyword_4());
		}
		(
			(
				(
					lv_value_5_0=RULE_STRING_LITERAL
					{
						newLeafNode(lv_value_5_0, grammarAccess.getIdentifiedIndexLookupAccess().getValueSTRING_LITERALTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdentifiedIndexLookupRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.xtext.example.mydsl.Cypher.STRING_LITERAL");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentifiedIndexLookupAccess().getLegacyParameterLegacyParameterParserRuleCall_5_1_0());
					}
					lv_legacyParameter_6_0=ruleLegacyParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentifiedIndexLookupRule());
						}
						set(
							$current,
							"legacyParameter",
							lv_legacyParameter_6_0,
							"org.xtext.example.mydsl.Cypher.LegacyParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getIdentifiedIndexLookupAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleIndexQuery
entryRuleIndexQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexQueryRule()); }
	iv_ruleIndexQuery=ruleIndexQuery
	{ $current=$iv_ruleIndexQuery.current; }
	EOF;

// Rule IndexQuery
ruleIndexQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Colon
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexQueryAccess().getColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexQueryAccess().getIndexNameSYMBOLIC_NAME_XParserRuleCall_1_0());
				}
				lv_indexName_1_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexQueryRule());
					}
					set(
						$current,
						"indexName",
						lv_indexName_1_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexQueryAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					lv_query_3_0=RULE_STRING_LITERAL
					{
						newLeafNode(lv_query_3_0, grammarAccess.getIndexQueryAccess().getQuerySTRING_LITERALTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndexQueryRule());
						}
						setWithLastConsumed(
							$current,
							"query",
							lv_query_3_0,
							"org.xtext.example.mydsl.Cypher.STRING_LITERAL");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getIndexQueryAccess().getParameterParameterParserRuleCall_3_1_0());
					}
					lv_parameter_4_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndexQueryRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_4_0,
							"org.xtext.example.mydsl.Cypher.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getIndexQueryAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleIdLookup
entryRuleIdLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdLookupRule()); }
	iv_ruleIdLookup=ruleIdLookup
	{ $current=$iv_ruleIdLookup.current; }
	EOF;

// Rule IdLookup
ruleIdLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getIdLookupAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIdLookupAccess().getIdsLiteralIdsParserRuleCall_1_0_0());
					}
					lv_ids_1_0=ruleLiteralIds
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdLookupRule());
						}
						set(
							$current,
							"ids",
							lv_ids_1_0,
							"org.xtext.example.mydsl.Cypher.LiteralIds");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getIdLookupAccess().getLegacyParameterParameterParserRuleCall_1_1_0());
					}
					lv_legacyParameter_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdLookupRule());
						}
						set(
							$current,
							"legacyParameter",
							lv_legacyParameter_2_0,
							"org.xtext.example.mydsl.Cypher.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_wildcard_3_0=Asterisk
					{
						newLeafNode(lv_wildcard_3_0, grammarAccess.getIdLookupAccess().getWildcardAsteriskKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdLookupRule());
						}
						setWithLastConsumed($current, "wildcard", lv_wildcard_3_0, "*");
					}
				)
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getIdLookupAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLiteralIds
entryRuleLiteralIds returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralIdsRule()); }
	iv_ruleLiteralIds=ruleLiteralIds
	{ $current=$iv_ruleLiteralIds.current; }
	EOF;

// Rule LiteralIds
ruleLiteralIds returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralIdsAccess().getIdsDecimalIntegerParserRuleCall_0_0());
				}
				lv_ids_0_0=ruleDecimalInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralIdsRule());
					}
					add(
						$current,
						"ids",
						lv_ids_0_0,
						"org.xtext.example.mydsl.Cypher.DecimalInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=Comma
			{
				newLeafNode(otherlv_1, grammarAccess.getLiteralIdsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralIdsAccess().getIdsDecimalIntegerParserRuleCall_1_1_0());
					}
					lv_ids_2_0=ruleDecimalInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralIdsRule());
						}
						add(
							$current,
							"ids",
							lv_ids_2_0,
							"org.xtext.example.mydsl.Cypher.DecimalInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	iv_ruleWhere=ruleWhere
	{ $current=$iv_ruleWhere.current; }
	EOF;

// Rule Where
ruleWhere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=WHERE
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereAccess().getWHEREKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhereAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhereRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	iv_rulePattern=rulePattern
	{ $current=$iv_rulePattern.current; }
	EOF;

// Rule Pattern
rulePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternAccess().getPatternsPatternPartParserRuleCall_0_0());
				}
				lv_patterns_0_0=rulePatternPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternRule());
					}
					add(
						$current,
						"patterns",
						lv_patterns_0_0,
						"org.xtext.example.mydsl.Cypher.PatternPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=Comma
			{
				newLeafNode(otherlv_1, grammarAccess.getPatternAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternAccess().getPatternsPatternPartParserRuleCall_1_1_0());
					}
					lv_patterns_2_0=rulePatternPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternRule());
						}
						add(
							$current,
							"patterns",
							lv_patterns_2_0,
							"org.xtext.example.mydsl.Cypher.PatternPart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePatternPart
entryRulePatternPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternPartRule()); }
	iv_rulePatternPart=rulePatternPart
	{ $current=$iv_rulePatternPart.current; }
	EOF;

// Rule PatternPart
rulePatternPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternPartAccess().getVarVariableDeclarationParserRuleCall_0_0_0());
					}
					lv_var_0_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternPartRule());
						}
						set(
							$current,
							"var",
							lv_var_0_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=EqualsSign
			{
				newLeafNode(otherlv_1, grammarAccess.getPatternPartAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternPartAccess().getPartAnonymousPatternPartParserRuleCall_0_2_0());
					}
					lv_part_2_0=ruleAnonymousPatternPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternPartRule());
						}
						set(
							$current,
							"part",
							lv_part_2_0,
							"org.xtext.example.mydsl.Cypher.AnonymousPatternPart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPatternPartAccess().getAnonymousPatternPartParserRuleCall_1());
		}
		this_AnonymousPatternPart_3=ruleAnonymousPatternPart
		{
			$current = $this_AnonymousPatternPart_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnonymousPatternPart
entryRuleAnonymousPatternPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnonymousPatternPartRule()); }
	iv_ruleAnonymousPatternPart=ruleAnonymousPatternPart
	{ $current=$iv_ruleAnonymousPatternPart.current; }
	EOF;

// Rule AnonymousPatternPart
ruleAnonymousPatternPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnonymousPatternPartAccess().getShortestPathPatternParserRuleCall_0());
		}
		this_ShortestPathPattern_0=ruleShortestPathPattern
		{
			$current = $this_ShortestPathPattern_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnonymousPatternPartAccess().getPatternElementParserRuleCall_1());
		}
		this_PatternElement_1=rulePatternElement
		{
			$current = $this_PatternElement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleShortestPathPattern
entryRuleShortestPathPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortestPathPatternRule()); }
	iv_ruleShortestPathPattern=ruleShortestPathPattern
	{ $current=$iv_ruleShortestPathPattern.current; }
	EOF;

// Rule ShortestPathPattern
ruleShortestPathPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getShortestPathPatternAccess().getShortestPathAction_0_0(),
						$current);
				}
			)
			otherlv_1=SHORTESTPATH
			{
				newLeafNode(otherlv_1, grammarAccess.getShortestPathPatternAccess().getSHORTESTPATHKeyword_0_1());
			}
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getShortestPathPatternAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShortestPathPatternAccess().getPatternElementPatternElementParserRuleCall_0_3_0());
					}
					lv_patternElement_3_0=rulePatternElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortestPathPatternRule());
						}
						set(
							$current,
							"patternElement",
							lv_patternElement_3_0,
							"org.xtext.example.mydsl.Cypher.PatternElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=RightParenthesis
			{
				newLeafNode(otherlv_4, grammarAccess.getShortestPathPatternAccess().getRightParenthesisKeyword_0_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getShortestPathPatternAccess().getAllShortestPathsAction_1_0(),
						$current);
				}
			)
			otherlv_6=ALLSHORTESTPATHS
			{
				newLeafNode(otherlv_6, grammarAccess.getShortestPathPatternAccess().getALLSHORTESTPATHSKeyword_1_1());
			}
			otherlv_7=LeftParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getShortestPathPatternAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShortestPathPatternAccess().getPatternElementPatternElementParserRuleCall_1_3_0());
					}
					lv_patternElement_8_0=rulePatternElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShortestPathPatternRule());
						}
						set(
							$current,
							"patternElement",
							lv_patternElement_8_0,
							"org.xtext.example.mydsl.Cypher.PatternElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=RightParenthesis
			{
				newLeafNode(otherlv_9, grammarAccess.getShortestPathPatternAccess().getRightParenthesisKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRulePatternElement
entryRulePatternElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternElementRule()); }
	iv_rulePatternElement=rulePatternElement
	{ $current=$iv_rulePatternElement.current; }
	EOF;

// Rule PatternElement
rulePatternElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternElementAccess().getNodepatternNodePatternParserRuleCall_0_0_0());
					}
					lv_nodepattern_0_0=ruleNodePattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternElementRule());
						}
						set(
							$current,
							"nodepattern",
							lv_nodepattern_0_0,
							"org.xtext.example.mydsl.Cypher.NodePattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternElementAccess().getChainPatternElementChainParserRuleCall_0_1_0());
					}
					lv_chain_1_0=rulePatternElementChain
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternElementRule());
						}
						add(
							$current,
							"chain",
							lv_chain_1_0,
							"org.xtext.example.mydsl.Cypher.PatternElementChain");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPatternElementAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getPatternElementAccess().getPatternElementParserRuleCall_1_1());
			}
			this_PatternElement_3=rulePatternElement
			{
				$current = $this_PatternElement_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=RightParenthesis
			{
				newLeafNode(otherlv_4, grammarAccess.getPatternElementAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleNodePattern
entryRuleNodePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodePatternRule()); }
	iv_ruleNodePattern=ruleNodePattern
	{ $current=$iv_ruleNodePattern.current; }
	EOF;

// Rule NodePattern
ruleNodePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getNodePatternAccess().getNodePatternAction_0(),
					$current);
			}
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getNodePatternAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePatternAccess().getVariableVariableDeclarationParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePatternRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNodePatternRule());
				}
				newCompositeNode(grammarAccess.getNodePatternAccess().getNodeLabelsParserRuleCall_3());
			}
			this_NodeLabels_3=ruleNodeLabels[$current]
			{
				$current = $this_NodeLabels_3.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePatternAccess().getPropertiesPropertiesParserRuleCall_4_0());
				}
				lv_properties_4_0=ruleProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePatternRule());
					}
					set(
						$current,
						"properties",
						lv_properties_4_0,
						"org.xtext.example.mydsl.Cypher.Properties");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getNodePatternAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulePatternElementChain
entryRulePatternElementChain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternElementChainRule()); }
	iv_rulePatternElementChain=rulePatternElementChain
	{ $current=$iv_rulePatternElementChain.current; }
	EOF;

// Rule PatternElementChain
rulePatternElementChain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternElementChainAccess().getRelationshipPatternRelationshipPatternParserRuleCall_0_0());
				}
				lv_relationshipPattern_0_0=ruleRelationshipPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternElementChainRule());
					}
					set(
						$current,
						"relationshipPattern",
						lv_relationshipPattern_0_0,
						"org.xtext.example.mydsl.Cypher.RelationshipPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternElementChainAccess().getNodePatternNodePatternParserRuleCall_1_0());
				}
				lv_nodePattern_1_0=ruleNodePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternElementChainRule());
					}
					set(
						$current,
						"nodePattern",
						lv_nodePattern_1_0,
						"org.xtext.example.mydsl.Cypher.NodePattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationshipPattern
entryRuleRelationshipPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipPatternRule()); }
	iv_ruleRelationshipPattern=ruleRelationshipPattern
	{ $current=$iv_ruleRelationshipPattern.current; }
	EOF;

// Rule RelationshipPattern
ruleRelationshipPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRelationshipPatternAccess().getRelationshipPatternAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipPatternAccess().getIncomingLeftArrowHeadParserRuleCall_1_0_0());
					}
					lv_incoming_1_0=ruleLeftArrowHead
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipPatternRule());
						}
						set(
							$current,
							"incoming",
							lv_incoming_1_0 != null,
							"org.xtext.example.mydsl.Cypher.LeftArrowHead");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getRelationshipPatternAccess().getDashParserRuleCall_1_1());
			}
			ruleDash
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipPatternAccess().getDetailRelationshipDetailParserRuleCall_1_2_0());
					}
					lv_detail_3_0=ruleRelationshipDetail
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipPatternRule());
						}
						set(
							$current,
							"detail",
							lv_detail_3_0,
							"org.xtext.example.mydsl.Cypher.RelationshipDetail");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getRelationshipPatternAccess().getDashParserRuleCall_1_3());
			}
			ruleDash
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipPatternAccess().getOutgoingRightArrowHeadParserRuleCall_1_4_0());
					}
					lv_outgoing_5_0=ruleRightArrowHead
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipPatternRule());
						}
						set(
							$current,
							"outgoing",
							lv_outgoing_5_0 != null,
							"org.xtext.example.mydsl.Cypher.RightArrowHead");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleRelationshipDetail
entryRuleRelationshipDetail returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipDetailRule()); }
	iv_ruleRelationshipDetail=ruleRelationshipDetail
	{ $current=$iv_ruleRelationshipDetail.current; }
	EOF;

// Rule RelationshipDetail
ruleRelationshipDetail returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRelationshipDetailAccess().getRelationshipDetailAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationshipDetailAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipDetailAccess().getVariableVariableDeclarationParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipDetailRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_optional_3_0=QuestionMark
				{
					newLeafNode(lv_optional_3_0, grammarAccess.getRelationshipDetailAccess().getOptionalQuestionMarkKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipDetailRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_3_0 != null, "?");
				}
			)
		)?
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipDetailRule());
				}
				newCompositeNode(grammarAccess.getRelationshipDetailAccess().getRelationshipTypesParserRuleCall_4());
			}
			this_RelationshipTypes_4=ruleRelationshipTypes[$current]
			{
				$current = $this_RelationshipTypes_4.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipDetailAccess().getRangeRangeLiteralParserRuleCall_5_0());
				}
				lv_range_5_0=ruleRangeLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipDetailRule());
					}
					set(
						$current,
						"range",
						lv_range_5_0,
						"org.xtext.example.mydsl.Cypher.RangeLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipDetailAccess().getPropertiesPropertiesParserRuleCall_6_0());
				}
				lv_properties_6_0=ruleProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipDetailRule());
					}
					set(
						$current,
						"properties",
						lv_properties_6_0,
						"org.xtext.example.mydsl.Cypher.Properties");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7=RightSquareBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getRelationshipDetailAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleProperties
entryRuleProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertiesRule()); }
	iv_ruleProperties=ruleProperties
	{ $current=$iv_ruleProperties.current; }
	EOF;

// Rule Properties
ruleProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertiesAccess().getMapLiteralParserRuleCall_0());
		}
		this_MapLiteral_0=ruleMapLiteral
		{
			$current = $this_MapLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertiesAccess().getParameterParserRuleCall_1());
		}
		this_Parameter_1=ruleParameter
		{
			$current = $this_Parameter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertiesAccess().getLegacyParameterParserRuleCall_2());
		}
		this_LegacyParameter_2=ruleLegacyParameter
		{
			$current = $this_LegacyParameter_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelType
entryRuleRelType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelTypeRule()); }
	iv_ruleRelType=ruleRelType
	{ $current=$iv_ruleRelType.current.getText(); }
	EOF;

// Rule RelType
ruleRelType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Colon
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelTypeAccess().getColonKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getRelTypeAccess().getRelTypeNameParserRuleCall_1());
		}
		this_RelTypeName_1=ruleRelTypeName
		{
			$current.merge(this_RelTypeName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule RelationshipTypes
ruleRelationshipTypes[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Colon
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipTypesAccess().getColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipTypesAccess().getRelTypeNamesRelTypeNameParserRuleCall_1_0());
				}
				lv_relTypeNames_1_0=ruleRelTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipTypesRule());
					}
					add(
						$current,
						"relTypeNames",
						lv_relTypeNames_1_0,
						"org.xtext.example.mydsl.Cypher.RelTypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=VerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getRelationshipTypesAccess().getVerticalLineKeyword_2_0());
			}
			(
				otherlv_3=Colon
				{
					newLeafNode(otherlv_3, grammarAccess.getRelationshipTypesAccess().getColonKeyword_2_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipTypesAccess().getRelTypeNamesRelTypeNameParserRuleCall_2_2_0());
					}
					lv_relTypeNames_4_0=ruleRelTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipTypesRule());
						}
						add(
							$current,
							"relTypeNames",
							lv_relTypeNames_4_0,
							"org.xtext.example.mydsl.Cypher.RelTypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule NodeLabels
ruleNodeLabels[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNodeLabelsAccess().getNodeLabelsNodeLabelParserRuleCall_0());
			}
			lv_nodeLabels_0_0=ruleNodeLabel
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNodeLabelsRule());
				}
				add(
					$current,
					"nodeLabels",
					lv_nodeLabels_0_0,
					"org.xtext.example.mydsl.Cypher.NodeLabel");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleNodeLabel
entryRuleNodeLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeLabelRule()); }
	iv_ruleNodeLabel=ruleNodeLabel
	{ $current=$iv_ruleNodeLabel.current; }
	EOF;

// Rule NodeLabel
ruleNodeLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Colon
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeLabelAccess().getColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeLabelAccess().getLabelNameLabelNameParserRuleCall_1_0());
				}
				lv_labelName_1_0=ruleLabelName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeLabelRule());
					}
					set(
						$current,
						"labelName",
						lv_labelName_1_0,
						"org.xtext.example.mydsl.Cypher.LabelName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRangeLiteral
entryRuleRangeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeLiteralRule()); }
	iv_ruleRangeLiteral=ruleRangeLiteral
	{ $current=$iv_ruleRangeLiteral.current; }
	EOF;

// Rule RangeLiteral
ruleRangeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRangeLiteralAccess().getRangeLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=Asterisk
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeLiteralAccess().getAsteriskKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeLiteralAccess().getLowerNumberParserRuleCall_2_0_0());
					}
					lv_lower_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeLiteralRule());
						}
						set(
							$current,
							"lower",
							lv_lower_2_0,
							"org.xtext.example.mydsl.Cypher.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					(
						lv_variableLength_3_0=FullStopFullStop
						{
							newLeafNode(lv_variableLength_3_0, grammarAccess.getRangeLiteralAccess().getVariableLengthFullStopFullStopKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRangeLiteralRule());
							}
							setWithLastConsumed($current, "variableLength", lv_variableLength_3_0 != null, "..");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeLiteralAccess().getUpperNumberParserRuleCall_2_1_1_0());
						}
						lv_upper_4_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeLiteralRule());
							}
							set(
								$current,
								"upper",
								lv_upper_4_0,
								"org.xtext.example.mydsl.Cypher.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)?
		)?
	)
;

// Entry rule entryRuleLabelName
entryRuleLabelName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLabelNameRule()); }
	iv_ruleLabelName=ruleLabelName
	{ $current=$iv_ruleLabelName.current.getText(); }
	EOF;

// Rule LabelName
ruleLabelName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getLabelNameAccess().getSYMBOLIC_NAME_XParserRuleCall());
	}
	this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
	{
		$current.merge(this_SYMBOLIC_NAME_X_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRelTypeName
entryRuleRelTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelTypeNameRule()); }
	iv_ruleRelTypeName=ruleRelTypeName
	{ $current=$iv_ruleRelTypeName.current.getText(); }
	EOF;

// Rule RelTypeName
ruleRelTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRelTypeNameAccess().getSYMBOLIC_NAME_XParserRuleCall());
	}
	this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
	{
		$current.merge(this_SYMBOLIC_NAME_X_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall());
	}
	this_OrExpression_0=ruleOrExpression
	{
		$current = $this_OrExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
		}
		this_XorExpression_0=ruleXorExpression
		{
			$current = $this_XorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=OR
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "OR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleXorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.XorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXorExpression
entryRuleXorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXorExpressionRule()); }
	iv_ruleXorExpression=ruleXorExpression
	{ $current=$iv_ruleXorExpression.current; }
	EOF;

// Rule XorExpression
ruleXorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getXorExpressionAccess().getXorExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=XOR
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXorExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "XOR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getNotExpressionParserRuleCall_0());
		}
		this_NotExpression_0=ruleNotExpression
		{
			$current = $this_NotExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=AND
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getAndExpressionAccess().getOperatorANDKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "AND");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightNotExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleNotExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.NotExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNotExpression
entryRuleNotExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotExpressionRule()); }
	iv_ruleNotExpression=ruleNotExpression
	{ $current=$iv_ruleNotExpression.current; }
	EOF;

// Rule NotExpression
ruleNotExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotExpressionAccess().getNotExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_operator_1_0=NOT
					{
						newLeafNode(lv_operator_1_0, grammarAccess.getNotExpressionAccess().getOperatorNOTKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNotExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_0, "NOT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotExpressionAccess().getLeftNotExpressionParserRuleCall_0_2_0());
					}
					lv_left_2_0=ruleNotExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotExpressionRule());
						}
						set(
							$current,
							"left",
							lv_left_2_0,
							"org.xtext.example.mydsl.Cypher.NotExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNotExpressionAccess().getComparisonExpressionParserRuleCall_1());
		}
		this_ComparisonExpression_3=ruleComparisonExpression
		{
			$current = $this_ComparisonExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAddOrSubtractExpressionParserRuleCall_0());
		}
		this_AddOrSubtractExpression_0=ruleAddOrSubtractExpression
		{
			$current = $this_AddOrSubtractExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=EqualsSign
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getComparisonExpressionAccess().getOperatorEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2=LessThanSignGreaterThanSign
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getComparisonExpressionAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3=LessThanSign
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getComparisonExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
						    |
						lv_operator_2_4=GreaterThanSign
						{
							newLeafNode(lv_operator_2_4, grammarAccess.getComparisonExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_4, null);
						}
						    |
						lv_operator_2_5=LessThanSignEqualsSign
						{
							newLeafNode(lv_operator_2_5, grammarAccess.getComparisonExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_5, null);
						}
						    |
						lv_operator_2_6=GreaterThanSignEqualsSign
						{
							newLeafNode(lv_operator_2_6, grammarAccess.getComparisonExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_6, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRightAddOrSubtractExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAddOrSubtractExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.AddOrSubtractExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddOrSubtractExpression
entryRuleAddOrSubtractExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddOrSubtractExpressionRule()); }
	iv_ruleAddOrSubtractExpression=ruleAddOrSubtractExpression
	{ $current=$iv_ruleAddOrSubtractExpression.current; }
	EOF;

// Rule AddOrSubtractExpression
ruleAddOrSubtractExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAddOrSubtractExpressionAccess().getMultiplyDivideModuloExpressionParserRuleCall_0());
		}
		this_MultiplyDivideModuloExpression_0=ruleMultiplyDivideModuloExpression
		{
			$current = $this_MultiplyDivideModuloExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAddOrSubtractExpressionAccess().getAddOrSubtractExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=PlusSign
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getAddOrSubtractExpressionAccess().getOperatorPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddOrSubtractExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2=HyphenMinus
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getAddOrSubtractExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddOrSubtractExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddOrSubtractExpressionAccess().getRightMultiplyDivideModuloExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplyDivideModuloExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddOrSubtractExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.MultiplyDivideModuloExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplyDivideModuloExpression
entryRuleMultiplyDivideModuloExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplyDivideModuloExpressionRule()); }
	iv_ruleMultiplyDivideModuloExpression=ruleMultiplyDivideModuloExpression
	{ $current=$iv_ruleMultiplyDivideModuloExpression.current; }
	EOF;

// Rule MultiplyDivideModuloExpression
ruleMultiplyDivideModuloExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMultiplyDivideModuloExpressionAccess().getPowerOfExpressionParserRuleCall_0());
		}
		this_PowerOfExpression_0=rulePowerOfExpression
		{
			$current = $this_PowerOfExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplyDivideModuloExpressionAccess().getMultiplyDivideModuloExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=Asterisk
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getMultiplyDivideModuloExpressionAccess().getOperatorAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplyDivideModuloExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2=Solidus
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getMultiplyDivideModuloExpressionAccess().getOperatorSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplyDivideModuloExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3=PercentSign
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getMultiplyDivideModuloExpressionAccess().getOperatorPercentSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplyDivideModuloExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplyDivideModuloExpressionAccess().getRightPowerOfExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePowerOfExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplyDivideModuloExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.PowerOfExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePowerOfExpression
entryRulePowerOfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerOfExpressionRule()); }
	iv_rulePowerOfExpression=rulePowerOfExpression
	{ $current=$iv_rulePowerOfExpression.current; }
	EOF;

// Rule PowerOfExpression
rulePowerOfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPowerOfExpressionAccess().getUnaryAddOrSubtractExpressionParserRuleCall_0());
		}
		this_UnaryAddOrSubtractExpression_0=ruleUnaryAddOrSubtractExpression
		{
			$current = $this_UnaryAddOrSubtractExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerOfExpressionAccess().getPowerOfExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=CircumflexAccent
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getPowerOfExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerOfExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerOfExpressionAccess().getRightUnaryAddOrSubtractExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleUnaryAddOrSubtractExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerOfExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Cypher.UnaryAddOrSubtractExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryAddOrSubtractExpression
entryRuleUnaryAddOrSubtractExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryAddOrSubtractExpressionRule()); }
	iv_ruleUnaryAddOrSubtractExpression=ruleUnaryAddOrSubtractExpression
	{ $current=$iv_ruleUnaryAddOrSubtractExpression.current; }
	EOF;

// Rule UnaryAddOrSubtractExpression
ruleUnaryAddOrSubtractExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryAddOrSubtractExpressionAccess().getStringListNullOperatorExpressionParserRuleCall_0());
		}
		this_StringListNullOperatorExpression_0=ruleStringListNullOperatorExpression
		{
			$current = $this_StringListNullOperatorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryAddOrSubtractExpressionAccess().getUnaryAddOrSubtractExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=PlusSign
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getUnaryAddOrSubtractExpressionAccess().getOperatorPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryAddOrSubtractExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2=HyphenMinus
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getUnaryAddOrSubtractExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryAddOrSubtractExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryAddOrSubtractExpressionAccess().getLeftUnaryAddOrSubtractExpressionParserRuleCall_1_2_0());
					}
					lv_left_3_0=ruleUnaryAddOrSubtractExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryAddOrSubtractExpressionRule());
						}
						set(
							$current,
							"left",
							lv_left_3_0,
							"org.xtext.example.mydsl.Cypher.UnaryAddOrSubtractExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStringListNullOperatorExpression
entryRuleStringListNullOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringListNullOperatorExpressionRule()); }
	iv_ruleStringListNullOperatorExpression=ruleStringListNullOperatorExpression
	{ $current=$iv_ruleStringListNullOperatorExpression.current; }
	EOF;

// Rule StringListNullOperatorExpression
ruleStringListNullOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStringListNullOperatorExpressionAccess().getPropertyOrLabelsExpressionParserRuleCall_0());
		}
		this_PropertyOrLabelsExpression_0=rulePropertyOrLabelsExpression
		{
			$current = $this_PropertyOrLabelsExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getStringListNullOperatorExpressionAccess().getStringListNullOperatorExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStringListNullOperatorExpressionAccess().getExpressionsStringOperatorExpressionParserRuleCall_1_1_0_0());
						}
						lv_expressions_2_1=ruleStringOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringListNullOperatorExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_2_1,
								"org.xtext.example.mydsl.Cypher.StringOperatorExpression");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getStringListNullOperatorExpressionAccess().getExpressionsListOperatorExpressionParserRuleCall_1_1_0_1());
						}
						lv_expressions_2_2=ruleListOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringListNullOperatorExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_2_2,
								"org.xtext.example.mydsl.Cypher.ListOperatorExpression");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getStringListNullOperatorExpressionAccess().getExpressionsNullOperatorExpressionParserRuleCall_1_1_0_2());
						}
						lv_expressions_2_3=ruleNullOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringListNullOperatorExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_2_3,
								"org.xtext.example.mydsl.Cypher.NullOperatorExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleListOperatorExpression
entryRuleListOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListOperatorExpressionRule()); }
	iv_ruleListOperatorExpression=ruleListOperatorExpression
	{ $current=$iv_ruleListOperatorExpression.current; }
	EOF;

// Rule ListOperatorExpression
ruleListOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getListOperatorExpressionAccess().getIndexLookupExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getListOperatorExpressionAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListOperatorExpressionAccess().getExpressionExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListOperatorExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=RightSquareBracket
			{
				newLeafNode(otherlv_3, grammarAccess.getListOperatorExpressionAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getListOperatorExpressionAccess().getIndexRangeExpressionAction_1_0(),
						$current);
				}
			)
			otherlv_5=LeftSquareBracket
			{
				newLeafNode(otherlv_5, grammarAccess.getListOperatorExpressionAccess().getLeftSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListOperatorExpressionAccess().getLowerExpressionParserRuleCall_1_2_0());
					}
					lv_lower_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListOperatorExpressionRule());
						}
						set(
							$current,
							"lower",
							lv_lower_6_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=FullStopFullStop
			{
				newLeafNode(otherlv_7, grammarAccess.getListOperatorExpressionAccess().getFullStopFullStopKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListOperatorExpressionAccess().getUpperExpressionParserRuleCall_1_4_0());
					}
					lv_upper_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListOperatorExpressionRule());
						}
						set(
							$current,
							"upper",
							lv_upper_8_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_9=RightSquareBracket
			{
				newLeafNode(otherlv_9, grammarAccess.getListOperatorExpressionAccess().getRightSquareBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleStringOperatorExpression
entryRuleStringOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOperatorExpressionRule()); }
	iv_ruleStringOperatorExpression=ruleStringOperatorExpression
	{ $current=$iv_ruleStringOperatorExpression.current; }
	EOF;

// Rule StringOperatorExpression
ruleStringOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getStringOperatorExpressionAccess().getRegExpMatchingExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=EqualsSignTilde
				{
					newLeafNode(otherlv_1, grammarAccess.getStringOperatorExpressionAccess().getEqualsSignTildeKeyword_0_0_1());
				}
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getStringOperatorExpressionAccess().getInCollectionExpressionAction_0_1_0(),
							$current);
					}
				)
				otherlv_3=IN
				{
					newLeafNode(otherlv_3, grammarAccess.getStringOperatorExpressionAccess().getINKeyword_0_1_1());
				}
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getStringOperatorExpressionAccess().getStartsWithExpressionAction_0_2_0(),
							$current);
					}
				)
				otherlv_5=STARTS
				{
					newLeafNode(otherlv_5, grammarAccess.getStringOperatorExpressionAccess().getSTARTSKeyword_0_2_1());
				}
				otherlv_6=WITH
				{
					newLeafNode(otherlv_6, grammarAccess.getStringOperatorExpressionAccess().getWITHKeyword_0_2_2());
				}
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getStringOperatorExpressionAccess().getEndsWithExpressionAction_0_3_0(),
							$current);
					}
				)
				otherlv_8=ENDS
				{
					newLeafNode(otherlv_8, grammarAccess.getStringOperatorExpressionAccess().getENDSKeyword_0_3_1());
				}
				otherlv_9=WITH
				{
					newLeafNode(otherlv_9, grammarAccess.getStringOperatorExpressionAccess().getWITHKeyword_0_3_2());
				}
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getStringOperatorExpressionAccess().getContainsExpressionAction_0_4_0(),
							$current);
					}
				)
				otherlv_11=CONTAINS
				{
					newLeafNode(otherlv_11, grammarAccess.getStringOperatorExpressionAccess().getCONTAINSKeyword_0_4_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperatorExpressionAccess().getRightPropertyOrLabelsExpressionParserRuleCall_1_0());
				}
				lv_right_12_0=rulePropertyOrLabelsExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperatorExpressionRule());
					}
					set(
						$current,
						"right",
						lv_right_12_0,
						"org.xtext.example.mydsl.Cypher.PropertyOrLabelsExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNullOperatorExpression
entryRuleNullOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullOperatorExpressionRule()); }
	iv_ruleNullOperatorExpression=ruleNullOperatorExpression
	{ $current=$iv_ruleNullOperatorExpression.current; }
	EOF;

// Rule NullOperatorExpression
ruleNullOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNullOperatorExpressionAccess().getIsNullExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1=IS
			{
				newLeafNode(otherlv_1, grammarAccess.getNullOperatorExpressionAccess().getISKeyword_0_1());
			}
			otherlv_2=NULL
			{
				newLeafNode(otherlv_2, grammarAccess.getNullOperatorExpressionAccess().getNULLKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNullOperatorExpressionAccess().getIsNotNullExpressionAction_1_0(),
						$current);
				}
			)
			otherlv_4=IS
			{
				newLeafNode(otherlv_4, grammarAccess.getNullOperatorExpressionAccess().getISKeyword_1_1());
			}
			otherlv_5=NOT
			{
				newLeafNode(otherlv_5, grammarAccess.getNullOperatorExpressionAccess().getNOTKeyword_1_2());
			}
			otherlv_6=NULL
			{
				newLeafNode(otherlv_6, grammarAccess.getNullOperatorExpressionAccess().getNULLKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRulePropertyOrLabelsExpression
entryRulePropertyOrLabelsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyOrLabelsExpressionRule()); }
	iv_rulePropertyOrLabelsExpression=rulePropertyOrLabelsExpression
	{ $current=$iv_rulePropertyOrLabelsExpression.current; }
	EOF;

// Rule PropertyOrLabelsExpression
rulePropertyOrLabelsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyOrLabelsExpressionAccess().getAtomParserRuleCall_0());
		}
		this_Atom_0=ruleAtom
		{
			$current = $this_Atom_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPropertyOrLabelsExpressionAccess().getPropertyLookupExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyOrLabelsExpressionAccess().getPropertyLookupsPropertyLookupParserRuleCall_1_1_0());
					}
					lv_propertyLookups_2_0=rulePropertyLookup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyOrLabelsExpressionRule());
						}
						add(
							$current,
							"propertyLookups",
							lv_propertyLookups_2_0,
							"org.xtext.example.mydsl.Cypher.PropertyLookup");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPropertyOrLabelsExpressionAccess().getNodeLabelsExpressionLeftAction_2_0(),
						$current);
				}
			)
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPropertyOrLabelsExpressionRule());
				}
				newCompositeNode(grammarAccess.getPropertyOrLabelsExpressionAccess().getNodeLabelsParserRuleCall_2_1());
			}
			this_NodeLabels_4=ruleNodeLabels[$current]
			{
				$current = $this_NodeLabels_4.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getParameterParserRuleCall_1());
		}
		this_Parameter_1=ruleParameter
		{
			$current = $this_Parameter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getLegacyParameterParserRuleCall_2());
		}
		this_LegacyParameter_2=ruleLegacyParameter
		{
			$current = $this_LegacyParameter_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getCaseExpressionParserRuleCall_3());
		}
		this_CaseExpression_3=ruleCaseExpression
		{
			$current = $this_CaseExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getCountAction_4_0(),
						$current);
				}
			)
			otherlv_5=COUNT
			{
				newLeafNode(otherlv_5, grammarAccess.getAtomAccess().getCOUNTKeyword_4_1());
			}
			otherlv_6=LeftParenthesis
			{
				newLeafNode(otherlv_6, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_4_2());
			}
			otherlv_7=Asterisk
			{
				newLeafNode(otherlv_7, grammarAccess.getAtomAccess().getAsteriskKeyword_4_3());
			}
			otherlv_8=RightParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getAtomAccess().getRightParenthesisKeyword_4_4());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getListComprehensionParserRuleCall_5());
		}
		this_ListComprehension_9=ruleListComprehension
		{
			$current = $this_ListComprehension_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getPatternComprehensionParserRuleCall_6());
		}
		this_PatternComprehension_10=rulePatternComprehension
		{
			$current = $this_PatternComprehension_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getFilterAction_7_0(),
						$current);
				}
			)
			otherlv_12=FILTER
			{
				newLeafNode(otherlv_12, grammarAccess.getAtomAccess().getFILTERKeyword_7_1());
			}
			otherlv_13=LeftParenthesis
			{
				newLeafNode(otherlv_13, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_7_3_0());
					}
					lv_filterExpression_14_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_14_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=RightParenthesis
			{
				newLeafNode(otherlv_15, grammarAccess.getAtomAccess().getRightParenthesisKeyword_7_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getExtractAction_8_0(),
						$current);
				}
			)
			otherlv_17=EXTRACT
			{
				newLeafNode(otherlv_17, grammarAccess.getAtomAccess().getEXTRACTKeyword_8_1());
			}
			otherlv_18=LeftParenthesis
			{
				newLeafNode(otherlv_18, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_8_3_0());
					}
					lv_filterExpression_19_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_19_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=VerticalLine
				{
					newLeafNode(otherlv_20, grammarAccess.getAtomAccess().getVerticalLineKeyword_8_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomAccess().getExpressionExpressionParserRuleCall_8_4_1_0());
						}
						lv_expression_21_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomRule());
							}
							set(
								$current,
								"expression",
								lv_expression_21_0,
								"org.xtext.example.mydsl.Cypher.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_22=RightParenthesis
			{
				newLeafNode(otherlv_22, grammarAccess.getAtomAccess().getRightParenthesisKeyword_8_5());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getReduceParserRuleCall_9());
		}
		this_Reduce_23=ruleReduce
		{
			$current = $this_Reduce_23.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getAllAction_10_0(),
						$current);
				}
			)
			otherlv_25=ALL
			{
				newLeafNode(otherlv_25, grammarAccess.getAtomAccess().getALLKeyword_10_1());
			}
			otherlv_26=LeftParenthesis
			{
				newLeafNode(otherlv_26, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_10_3_0());
					}
					lv_filterExpression_27_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_27_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_28=RightParenthesis
			{
				newLeafNode(otherlv_28, grammarAccess.getAtomAccess().getRightParenthesisKeyword_10_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getAnyAction_11_0(),
						$current);
				}
			)
			otherlv_30=ANY
			{
				newLeafNode(otherlv_30, grammarAccess.getAtomAccess().getANYKeyword_11_1());
			}
			otherlv_31=LeftParenthesis
			{
				newLeafNode(otherlv_31, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_11_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_11_3_0());
					}
					lv_filterExpression_32_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_32_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33=RightParenthesis
			{
				newLeafNode(otherlv_33, grammarAccess.getAtomAccess().getRightParenthesisKeyword_11_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getNoneAction_12_0(),
						$current);
				}
			)
			otherlv_35=NONE
			{
				newLeafNode(otherlv_35, grammarAccess.getAtomAccess().getNONEKeyword_12_1());
			}
			otherlv_36=LeftParenthesis
			{
				newLeafNode(otherlv_36, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_12_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_12_3_0());
					}
					lv_filterExpression_37_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_37_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_38=RightParenthesis
			{
				newLeafNode(otherlv_38, grammarAccess.getAtomAccess().getRightParenthesisKeyword_12_4());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getSingleAction_13_0(),
						$current);
				}
			)
			otherlv_40=SINGLE
			{
				newLeafNode(otherlv_40, grammarAccess.getAtomAccess().getSINGLEKeyword_13_1());
			}
			otherlv_41=LeftParenthesis
			{
				newLeafNode(otherlv_41, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_13_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getFilterExpressionFilterExpressionParserRuleCall_13_3_0());
					}
					lv_filterExpression_42_0=ruleFilterExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"filterExpression",
							lv_filterExpression_42_0,
							"org.xtext.example.mydsl.Cypher.FilterExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_43=RightParenthesis
			{
				newLeafNode(otherlv_43, grammarAccess.getAtomAccess().getRightParenthesisKeyword_13_4());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getShortestPathPatternParserRuleCall_14());
		}
		this_ShortestPathPattern_44=ruleShortestPathPattern
		{
			$current = $this_ShortestPathPattern_44.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getRelationshipsPatternParserRuleCall_15());
		}
		this_RelationshipsPattern_45=ruleRelationshipsPattern
		{
			$current = $this_RelationshipsPattern_45.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getParenthesizedExpressionParserRuleCall_16());
		}
		this_ParenthesizedExpression_46=ruleParenthesizedExpression
		{
			$current = $this_ParenthesizedExpression_46.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomAccess().getFunctionInvocationParserRuleCall_17());
		}
		this_FunctionInvocation_47=ruleFunctionInvocation
		{
			$current = $this_FunctionInvocation_47.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getVariableRefAction_18_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getVariableRefVariableDeclarationParserRuleCall_18_1_0());
					}
					lv_variableRef_49_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"variableRef",
							lv_variableRef_49_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0());
		}
		this_NumberLiteral_0=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1());
		}
		this_StringLiteral_1=ruleStringLiteral
		{
			$current = $this_StringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getNULLAction_2_0(),
						$current);
				}
			)
			otherlv_3=NULL
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteralAccess().getNULLKeyword_2_1());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3());
		}
		this_BooleanLiteral_4=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_4());
		}
		this_MapLiteral_5=ruleMapLiteral
		{
			$current = $this_MapLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_5());
		}
		this_ListLiteral_6=ruleListLiteral
		{
			$current = $this_ListLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_1=TRUE
					{
						newLeafNode(lv_value_1_1, grammarAccess.getBooleanLiteralAccess().getValueTRUEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2=FALSE
					{
						newLeafNode(lv_value_1_2, grammarAccess.getBooleanLiteralAccess().getValueFALSEKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	iv_ruleListLiteral=ruleListLiteral
	{ $current=$iv_ruleListLiteral.current; }
	EOF;

// Rule ListLiteral
ruleListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getListLiteralAccess().getListLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListLiteralAccess().getExpressionsExpressionParserRuleCall_2_0_0());
					}
					lv_expressions_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListLiteralRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_2_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListLiteralAccess().getExpressionsExpressionParserRuleCall_2_1_1_0());
						}
						lv_expressions_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListLiteralRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_4_0,
								"org.xtext.example.mydsl.Cypher.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleReduce
entryRuleReduce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReduceRule()); }
	iv_ruleReduce=ruleReduce
	{ $current=$iv_ruleReduce.current; }
	EOF;

// Rule Reduce
ruleReduce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=REDUCE
		{
			newLeafNode(otherlv_0, grammarAccess.getReduceAccess().getREDUCEKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getReduceAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReduceAccess().getAccumulatorVariableDeclarationParserRuleCall_2_0());
				}
				lv_accumulator_2_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReduceRule());
					}
					set(
						$current,
						"accumulator",
						lv_accumulator_2_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=EqualsSign
		{
			newLeafNode(otherlv_3, grammarAccess.getReduceAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReduceAccess().getAccumulatorExpressionExpressionParserRuleCall_4_0());
				}
				lv_accumulatorExpression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReduceRule());
					}
					set(
						$current,
						"accumulatorExpression",
						lv_accumulatorExpression_4_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=Comma
		{
			newLeafNode(otherlv_5, grammarAccess.getReduceAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReduceAccess().getIdInCollIdInCollParserRuleCall_6_0());
				}
				lv_idInColl_6_0=ruleIdInColl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReduceRule());
					}
					set(
						$current,
						"idInColl",
						lv_idInColl_6_0,
						"org.xtext.example.mydsl.Cypher.IdInColl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=VerticalLine
		{
			newLeafNode(otherlv_7, grammarAccess.getReduceAccess().getVerticalLineKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReduceAccess().getExpressionExpressionParserRuleCall_8_0());
				}
				lv_expression_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReduceRule());
					}
					set(
						$current,
						"expression",
						lv_expression_8_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=RightParenthesis
		{
			newLeafNode(otherlv_9, grammarAccess.getReduceAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	iv_ruleParenthesizedExpression=ruleParenthesizedExpression
	{ $current=$iv_ruleParenthesizedExpression.current; }
	EOF;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesizedExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleRelationshipsPattern
entryRuleRelationshipsPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipsPatternRule()); }
	iv_ruleRelationshipsPattern=ruleRelationshipsPattern
	{ $current=$iv_ruleRelationshipsPattern.current; }
	EOF;

// Rule RelationshipsPattern
ruleRelationshipsPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipsPatternAccess().getNodePatternNodePatternParserRuleCall_0_0());
				}
				lv_nodePattern_0_0=ruleNodePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipsPatternRule());
					}
					set(
						$current,
						"nodePattern",
						lv_nodePattern_0_0,
						"org.xtext.example.mydsl.Cypher.NodePattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipsPatternAccess().getChainPatternElementChainParserRuleCall_1_0());
				}
				lv_chain_1_0=rulePatternElementChain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipsPatternRule());
					}
					add(
						$current,
						"chain",
						lv_chain_1_0,
						"org.xtext.example.mydsl.Cypher.PatternElementChain");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleFilterExpression
entryRuleFilterExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterExpressionRule()); }
	iv_ruleFilterExpression=ruleFilterExpression
	{ $current=$iv_ruleFilterExpression.current; }
	EOF;

// Rule FilterExpression
ruleFilterExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpressionAccess().getIdInCollIdInCollParserRuleCall_0_0());
				}
				lv_idInColl_0_0=ruleIdInColl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpressionRule());
					}
					set(
						$current,
						"idInColl",
						lv_idInColl_0_0,
						"org.xtext.example.mydsl.Cypher.IdInColl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpressionAccess().getWhereWhereParserRuleCall_1_0());
				}
				lv_where_1_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpressionRule());
					}
					set(
						$current,
						"where",
						lv_where_1_0,
						"org.xtext.example.mydsl.Cypher.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleIdInColl
entryRuleIdInColl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdInCollRule()); }
	iv_ruleIdInColl=ruleIdInColl
	{ $current=$iv_ruleIdInColl.current; }
	EOF;

// Rule IdInColl
ruleIdInColl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIdInCollAccess().getVariableVariableDeclarationParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdInCollRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"org.xtext.example.mydsl.Cypher.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=IN
		{
			newLeafNode(otherlv_1, grammarAccess.getIdInCollAccess().getINKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdInCollAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdInCollRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionInvocation
entryRuleFunctionInvocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionInvocationRule()); }
	iv_ruleFunctionInvocation=ruleFunctionInvocation
	{ $current=$iv_ruleFunctionInvocation.current; }
	EOF;

// Rule FunctionInvocation
ruleFunctionInvocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionInvocationAccess().getFunctionNameFunctionNameParserRuleCall_0_0());
				}
				lv_functionName_0_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionInvocationRule());
					}
					set(
						$current,
						"functionName",
						lv_functionName_0_0,
						"org.xtext.example.mydsl.Cypher.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionInvocationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_distinct_2_0=DISTINCT
				{
					newLeafNode(lv_distinct_2_0, grammarAccess.getFunctionInvocationAccess().getDistinctDISTINCTKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionInvocationRule());
					}
					setWithLastConsumed($current, "distinct", lv_distinct_2_0 != null, "DISTINCT");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionInvocationAccess().getParameterExpressionParserRuleCall_3_0_0());
					}
					lv_parameter_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionInvocationRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_3_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionInvocationAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionInvocationAccess().getParameterExpressionParserRuleCall_3_1_1_0());
						}
						lv_parameter_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionInvocationRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_5_0,
								"org.xtext.example.mydsl.Cypher.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionInvocationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current.getText(); }
	EOF;

// Rule FunctionName
ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionNameAccess().getSYMBOLIC_NAME_XParserRuleCall());
	}
	this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
	{
		$current.merge(this_SYMBOLIC_NAME_X_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExplicitProcedureInvocation
entryRuleExplicitProcedureInvocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExplicitProcedureInvocationRule()); }
	iv_ruleExplicitProcedureInvocation=ruleExplicitProcedureInvocation
	{ $current=$iv_ruleExplicitProcedureInvocation.current; }
	EOF;

// Rule ExplicitProcedureInvocation
ruleExplicitProcedureInvocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExplicitProcedureInvocationAccess().getProcedureNameProcedureNameParserRuleCall_0_0());
				}
				lv_procedureName_0_0=ruleProcedureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExplicitProcedureInvocationRule());
					}
					set(
						$current,
						"procedureName",
						lv_procedureName_0_0,
						"org.xtext.example.mydsl.Cypher.ProcedureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getExplicitProcedureInvocationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExplicitProcedureInvocationAccess().getParameterExpressionParserRuleCall_2_0_0());
					}
					lv_parameter_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExplicitProcedureInvocationRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_2_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getExplicitProcedureInvocationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExplicitProcedureInvocationAccess().getParameterExpressionParserRuleCall_2_1_1_0());
						}
						lv_parameter_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExplicitProcedureInvocationRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_4_0,
								"org.xtext.example.mydsl.Cypher.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getExplicitProcedureInvocationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleImplicitProcedureInvocation
entryRuleImplicitProcedureInvocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitProcedureInvocationRule()); }
	iv_ruleImplicitProcedureInvocation=ruleImplicitProcedureInvocation
	{ $current=$iv_ruleImplicitProcedureInvocation.current; }
	EOF;

// Rule ImplicitProcedureInvocation
ruleImplicitProcedureInvocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getImplicitProcedureInvocationAccess().getImplicitProcedureInvocationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicitProcedureInvocationAccess().getProcedureNameProcedureNameParserRuleCall_1_0());
				}
				lv_procedureName_1_0=ruleProcedureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicitProcedureInvocationRule());
					}
					set(
						$current,
						"procedureName",
						lv_procedureName_1_0,
						"org.xtext.example.mydsl.Cypher.ProcedureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProcedureResultField
entryRuleProcedureResultField returns [String current=null]:
	{ newCompositeNode(grammarAccess.getProcedureResultFieldRule()); }
	iv_ruleProcedureResultField=ruleProcedureResultField
	{ $current=$iv_ruleProcedureResultField.current.getText(); }
	EOF;

// Rule ProcedureResultField
ruleProcedureResultField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getProcedureResultFieldAccess().getSYMBOLIC_NAME_XParserRuleCall());
	}
	this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
	{
		$current.merge(this_SYMBOLIC_NAME_X_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleProcedureName
entryRuleProcedureName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcedureNameRule()); }
	iv_ruleProcedureName=ruleProcedureName
	{ $current=$iv_ruleProcedureName.current; }
	EOF;

// Rule ProcedureName
ruleProcedureName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureNameAccess().getNamespaceNamespaceParserRuleCall_0_0());
				}
				lv_namespace_0_0=ruleNamespace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureNameRule());
					}
					set(
						$current,
						"namespace",
						lv_namespace_0_0,
						"org.xtext.example.mydsl.Cypher.Namespace");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedureNameAccess().getNameSYMBOLIC_NAME_XParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedureNameRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current.getText(); }
	EOF;

// Rule Namespace
ruleNamespace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamespaceAccess().getSYMBOLIC_NAME_XParserRuleCall_0());
		}
		this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
		{
			$current.merge(this_SYMBOLIC_NAME_X_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNamespaceAccess().getFullStopKeyword_1());
		}
	)*
;

// Entry rule entryRuleListComprehension
entryRuleListComprehension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListComprehensionRule()); }
	iv_ruleListComprehension=ruleListComprehension
	{ $current=$iv_ruleListComprehension.current; }
	EOF;

// Rule ListComprehension
ruleListComprehension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getListComprehensionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListComprehensionAccess().getFilterExpressionFilterExpressionParserRuleCall_1_0());
				}
				lv_filterExpression_1_0=ruleFilterExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListComprehensionRule());
					}
					set(
						$current,
						"filterExpression",
						lv_filterExpression_1_0,
						"org.xtext.example.mydsl.Cypher.FilterExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=VerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getListComprehensionAccess().getVerticalLineKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListComprehensionAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListComprehensionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=RightSquareBracket
		{
			newLeafNode(otherlv_4, grammarAccess.getListComprehensionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRulePatternComprehension
entryRulePatternComprehension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternComprehensionRule()); }
	iv_rulePatternComprehension=rulePatternComprehension
	{ $current=$iv_rulePatternComprehension.current; }
	EOF;

// Rule PatternComprehension
rulePatternComprehension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getPatternComprehensionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternComprehensionAccess().getPathVariableVariableDeclarationParserRuleCall_1_0_0());
					}
					lv_pathVariable_1_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternComprehensionRule());
						}
						set(
							$current,
							"pathVariable",
							lv_pathVariable_1_0,
							"org.xtext.example.mydsl.Cypher.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=EqualsSign
			{
				newLeafNode(otherlv_2, grammarAccess.getPatternComprehensionAccess().getEqualsSignKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternComprehensionAccess().getPatternRelationshipsPatternParserRuleCall_2_0());
				}
				lv_pattern_3_0=ruleRelationshipsPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternComprehensionRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_3_0,
						"org.xtext.example.mydsl.Cypher.RelationshipsPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternComprehensionAccess().getWhereWhereParserRuleCall_3_0());
				}
				lv_where_4_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternComprehensionRule());
					}
					set(
						$current,
						"where",
						lv_where_4_0,
						"org.xtext.example.mydsl.Cypher.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=VerticalLine
		{
			newLeafNode(otherlv_5, grammarAccess.getPatternComprehensionAccess().getVerticalLineKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternComprehensionAccess().getExpressionExpressionParserRuleCall_5_0());
				}
				lv_expression_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternComprehensionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_6_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=RightSquareBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getPatternComprehensionAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePropertyLookup
entryRulePropertyLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyLookupRule()); }
	iv_rulePropertyLookup=rulePropertyLookup
	{ $current=$iv_rulePropertyLookup.current; }
	EOF;

// Rule PropertyLookup
rulePropertyLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=FullStop
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyLookupAccess().getFullStopKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyLookupAccess().getPropertyKeyNamePropertyKeyNameParserRuleCall_1_0_0_0());
						}
						lv_propertyKeyName_1_0=rulePropertyKeyName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyLookupRule());
							}
							set(
								$current,
								"propertyKeyName",
								lv_propertyKeyName_1_0,
								"org.xtext.example.mydsl.Cypher.PropertyKeyName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_propertyOperator_2_1=QuestionMark
							{
								newLeafNode(lv_propertyOperator_2_1, grammarAccess.getPropertyLookupAccess().getPropertyOperatorQuestionMarkKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPropertyLookupRule());
								}
								setWithLastConsumed($current, "propertyOperator", lv_propertyOperator_2_1, null);
							}
							    |
							lv_propertyOperator_2_2=ExclamationMark
							{
								newLeafNode(lv_propertyOperator_2_2, grammarAccess.getPropertyLookupAccess().getPropertyOperatorExclamationMarkKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPropertyLookupRule());
								}
								setWithLastConsumed($current, "propertyOperator", lv_propertyOperator_2_2, null);
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyLookupAccess().getPropertyKeyNamePropertyKeyNameParserRuleCall_1_1_0());
					}
					lv_propertyKeyName_3_0=rulePropertyKeyName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyLookupRule());
						}
						set(
							$current,
							"propertyKeyName",
							lv_propertyKeyName_3_0,
							"org.xtext.example.mydsl.Cypher.PropertyKeyName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCaseExpression
entryRuleCaseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseExpressionRule()); }
	iv_ruleCaseExpression=ruleCaseExpression
	{ $current=$iv_ruleCaseExpression.current; }
	EOF;

// Rule CaseExpression
ruleCaseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=CASE
				{
					newLeafNode(otherlv_0, grammarAccess.getCaseExpressionAccess().getCASEKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCaseExpressionAccess().getCaseAlternativesCaseAlternativesParserRuleCall_0_0_1_0());
						}
						lv_caseAlternatives_1_0=ruleCaseAlternatives
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCaseExpressionRule());
							}
							add(
								$current,
								"caseAlternatives",
								lv_caseAlternatives_1_0,
								"org.xtext.example.mydsl.Cypher.CaseAlternatives");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_2=CASE
				{
					newLeafNode(otherlv_2, grammarAccess.getCaseExpressionAccess().getCASEKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCaseExpressionAccess().getCaseExpressionExpressionParserRuleCall_0_1_1_0());
						}
						lv_caseExpression_3_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCaseExpressionRule());
							}
							set(
								$current,
								"caseExpression",
								lv_caseExpression_3_0,
								"org.xtext.example.mydsl.Cypher.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCaseExpressionAccess().getCaseAlternativesCaseAlternativesParserRuleCall_0_1_2_0());
						}
						lv_caseAlternatives_4_0=ruleCaseAlternatives
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCaseExpressionRule());
							}
							add(
								$current,
								"caseAlternatives",
								lv_caseAlternatives_4_0,
								"org.xtext.example.mydsl.Cypher.CaseAlternatives");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
		)
		(
			otherlv_5=ELSE
			{
				newLeafNode(otherlv_5, grammarAccess.getCaseExpressionAccess().getELSEKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseExpressionAccess().getElseExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_elseExpression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseExpressionRule());
						}
						set(
							$current,
							"elseExpression",
							lv_elseExpression_6_0,
							"org.xtext.example.mydsl.Cypher.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=END
		{
			newLeafNode(otherlv_7, grammarAccess.getCaseExpressionAccess().getENDKeyword_2());
		}
	)
;

// Entry rule entryRuleCaseAlternatives
entryRuleCaseAlternatives returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseAlternativesRule()); }
	iv_ruleCaseAlternatives=ruleCaseAlternatives
	{ $current=$iv_ruleCaseAlternatives.current; }
	EOF;

// Rule CaseAlternatives
ruleCaseAlternatives returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=WHEN
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseAlternativesAccess().getWHENKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAlternativesAccess().getWhenExpressionParserRuleCall_1_0());
				}
				lv_when_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseAlternativesRule());
					}
					set(
						$current,
						"when",
						lv_when_1_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=THEN
		{
			newLeafNode(otherlv_2, grammarAccess.getCaseAlternativesAccess().getTHENKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAlternativesAccess().getThenExpressionParserRuleCall_3_0());
				}
				lv_then_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseAlternativesRule());
					}
					set(
						$current,
						"then",
						lv_then_3_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getNameSYMBOLIC_NAME_XParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSYMBOLIC_NAME_X
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING_LITERAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRING_LITERALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Cypher.STRING_LITERAL");
			}
		)
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_0());
			}
			lv_value_0_0=ruleNumber
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumberLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Cypher.Number");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralRule()); }
	iv_ruleMapLiteral=ruleMapLiteral
	{ $current=$iv_ruleMapLiteral.current; }
	EOF;

// Rule MapLiteral
ruleMapLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapLiteralAccess().getMapLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapLiteralEntryParserRuleCall_2_0_0());
					}
					lv_entries_2_0=ruleMapLiteralEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
						}
						add(
							$current,
							"entries",
							lv_entries_2_0,
							"org.xtext.example.mydsl.Cypher.MapLiteralEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getMapLiteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapLiteralEntryParserRuleCall_2_1_1_0());
						}
						lv_entries_4_0=ruleMapLiteralEntry
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"entries",
								lv_entries_4_0,
								"org.xtext.example.mydsl.Cypher.MapLiteralEntry");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapLiteralEntry
entryRuleMapLiteralEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralEntryRule()); }
	iv_ruleMapLiteralEntry=ruleMapLiteralEntry
	{ $current=$iv_ruleMapLiteralEntry.current; }
	EOF;

// Rule MapLiteralEntry
ruleMapLiteralEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMapLiteralEntryAccess().getKeyPropertyKeyNameParserRuleCall_0_0());
				}
				lv_key_0_0=rulePropertyKeyName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapLiteralEntryRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"org.xtext.example.mydsl.Cypher.PropertyKeyName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getMapLiteralEntryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapLiteralEntryAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapLiteralEntryRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Cypher.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLegacyParameter
entryRuleLegacyParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLegacyParameterRule()); }
	iv_ruleLegacyParameter=ruleLegacyParameter
	{ $current=$iv_ruleLegacyParameter.current; }
	EOF;

// Rule LegacyParameter
ruleLegacyParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getLegacyParameterAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLegacyParameterAccess().getParameterSYMBOLIC_NAME_XParserRuleCall_1_0_0());
					}
					lv_parameter_1_1=ruleSYMBOLIC_NAME_X
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLegacyParameterRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_1_1,
							"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLegacyParameterAccess().getParameterNumberParserRuleCall_1_0_1());
					}
					lv_parameter_1_2=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLegacyParameterRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_1_2,
							"org.xtext.example.mydsl.Cypher.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2=RightCurlyBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getLegacyParameterAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=DollarSign
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getDollarSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getParameterSYMBOLIC_NAME_XParserRuleCall_1_0_0());
					}
					lv_parameter_1_1=ruleSYMBOLIC_NAME_X
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_1_1,
							"org.xtext.example.mydsl.Cypher.SYMBOLIC_NAME_X");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getParameterAccess().getParameterNumberParserRuleCall_1_0_1());
					}
					lv_parameter_1_2=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_1_2,
							"org.xtext.example.mydsl.Cypher.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePropertyExpression
entryRulePropertyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyExpressionRule()); }
	iv_rulePropertyExpression=rulePropertyExpression
	{ $current=$iv_rulePropertyExpression.current; }
	EOF;

// Rule PropertyExpression
rulePropertyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyExpressionAccess().getAtomParserRuleCall_0());
		}
		this_Atom_0=ruleAtom
		{
			$current = $this_Atom_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyExpressionAccess().getPropertyLookupsPropertyLookupParserRuleCall_1_0());
				}
				lv_propertyLookups_1_0=rulePropertyLookup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyExpressionRule());
					}
					add(
						$current,
						"propertyLookups",
						lv_propertyLookups_1_0,
						"org.xtext.example.mydsl.Cypher.PropertyLookup");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulePropertyKeyName
entryRulePropertyKeyName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPropertyKeyNameRule()); }
	iv_rulePropertyKeyName=rulePropertyKeyName
	{ $current=$iv_rulePropertyKeyName.current.getText(); }
	EOF;

// Rule PropertyKeyName
rulePropertyKeyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPropertyKeyNameAccess().getSYMBOLIC_NAME_XParserRuleCall());
	}
	this_SYMBOLIC_NAME_X_0=ruleSYMBOLIC_NAME_X
	{
		$current.merge(this_SYMBOLIC_NAME_X_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLeftArrowHead
entryRuleLeftArrowHead returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLeftArrowHeadRule()); }
	iv_ruleLeftArrowHead=ruleLeftArrowHead
	{ $current=$iv_ruleLeftArrowHead.current.getText(); }
	EOF;

// Rule LeftArrowHead
ruleLeftArrowHead returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=LessThanSign
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getLeftArrowHeadAccess().getLessThanSignKeyword());
	}
;

// Entry rule entryRuleRightArrowHead
entryRuleRightArrowHead returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRightArrowHeadRule()); }
	iv_ruleRightArrowHead=ruleRightArrowHead
	{ $current=$iv_ruleRightArrowHead.current.getText(); }
	EOF;

// Rule RightArrowHead
ruleRightArrowHead returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=GreaterThanSign
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getRightArrowHeadAccess().getGreaterThanSignKeyword());
	}
;

// Entry rule entryRuleDash
entryRuleDash returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDashRule()); }
	iv_ruleDash=ruleDash
	{ $current=$iv_ruleDash.current.getText(); }
	EOF;

// Rule Dash
ruleDash returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=HyphenMinus
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getDashAccess().getHyphenMinusKeyword());
	}
;

// Entry rule entryRuleDecimalInteger
entryRuleDecimalInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecimalIntegerRule()); }
	iv_ruleDecimalInteger=ruleDecimalInteger
	{ $current=$iv_ruleDecimalInteger.current; }
	EOF;

// Rule DecimalInteger
ruleDecimalInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDecimalIntegerAccess().getDecimalIntegerAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDecimalIntegerAccess().getValueNumberParserRuleCall_1_0());
				}
				lv_value_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDecimalIntegerRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.mydsl.Cypher.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_HEX_0=RULE_HEX
		{
			$current.merge(this_HEX_0);
		}
		{
			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
		}
		    |
		(
			(
				this_INT_1=RULE_INT
				{
					$current.merge(this_INT_1);
				}
				{
					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
				}
				    |
				this_DECIMAL_2=RULE_DECIMAL
				{
					$current.merge(this_DECIMAL_2);
				}
				{
					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
				}
			)
			(
				kw=FullStop
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
				}
				(
					this_INT_4=RULE_INT
					{
						$current.merge(this_INT_4);
					}
					{
						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
					}
					    |
					this_DECIMAL_5=RULE_DECIMAL
					{
						$current.merge(this_DECIMAL_5);
					}
					{
						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
					}
				)
			)?
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSYMBOLIC_NAME_X
entryRuleSYMBOLIC_NAME_X returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSYMBOLIC_NAME_XRule()); }
	iv_ruleSYMBOLIC_NAME_X=ruleSYMBOLIC_NAME_X
	{ $current=$iv_ruleSYMBOLIC_NAME_X.current.getText(); }
	EOF;

// Rule SYMBOLIC_NAME_X
ruleSYMBOLIC_NAME_X returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getSYMBOLIC_NAME_XAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw=CYPHER
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCYPHERKeyword_1());
		}
		    |
		kw=EXPLAIN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getEXPLAINKeyword_2());
		}
		    |
		kw=PROFILE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getPROFILEKeyword_3());
		}
		    |
		kw=USING
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getUSINGKeyword_4());
		}
		    |
		kw=PERIODIC
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getPERIODICKeyword_5());
		}
		    |
		kw=COMMIT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCOMMITKeyword_6());
		}
		    |
		kw=UNION
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getUNIONKeyword_7());
		}
		    |
		kw=ALL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getALLKeyword_8());
		}
		    |
		kw=CREATE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCREATEKeyword_9());
		}
		    |
		kw=INDEX
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getINDEXKeyword_10());
		}
		    |
		kw=ON
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getONKeyword_11());
		}
		    |
		kw=DROP
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDROPKeyword_12());
		}
		    |
		kw=CONSTRAINT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCONSTRAINTKeyword_13());
		}
		    |
		kw=ASSERT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getASSERTKeyword_14());
		}
		    |
		kw=IS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getISKeyword_15());
		}
		    |
		kw=UNIQUE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getUNIQUEKeyword_16());
		}
		    |
		kw=EXISTS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getEXISTSKeyword_17());
		}
		    |
		kw=LOAD
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getLOADKeyword_18());
		}
		    |
		kw=CSV
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCSVKeyword_19());
		}
		    |
		kw=WITH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getWITHKeyword_20());
		}
		    |
		kw=HEADERS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getHEADERSKeyword_21());
		}
		    |
		kw=FROM
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getFROMKeyword_22());
		}
		    |
		kw=AS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getASKeyword_23());
		}
		    |
		kw=FIELDTERMINATOR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getFIELDTERMINATORKeyword_24());
		}
		    |
		kw=OPTIONAL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getOPTIONALKeyword_25());
		}
		    |
		kw=MATCH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getMATCHKeyword_26());
		}
		    |
		kw=UNWIND
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getUNWINDKeyword_27());
		}
		    |
		kw=MERGE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getMERGEKeyword_28());
		}
		    |
		kw=SET
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSETKeyword_29());
		}
		    |
		kw=DELETE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDELETEKeyword_30());
		}
		    |
		kw=DETACH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDETACHKeyword_31());
		}
		    |
		kw=REMOVE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getREMOVEKeyword_32());
		}
		    |
		kw=FOREACH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getFOREACHKeyword_33());
		}
		    |
		kw=IN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getINKeyword_34());
		}
		    |
		kw=DISTINCT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDISTINCTKeyword_35());
		}
		    |
		kw=RETURN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getRETURNKeyword_36());
		}
		    |
		kw=ORDER
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getORDERKeyword_37());
		}
		    |
		kw=BY
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getBYKeyword_38());
		}
		    |
		kw=SKIP
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSKIPKeyword_39());
		}
		    |
		kw=LIMIT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getLIMITKeyword_40());
		}
		    |
		kw=DESCENDING
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDESCENDINGKeyword_41());
		}
		    |
		kw=DESC
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getDESCKeyword_42());
		}
		    |
		kw=ASCENDING
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getASCENDINGKeyword_43());
		}
		    |
		kw=ASC
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getASCKeyword_44());
		}
		    |
		kw=JOIN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getJOINKeyword_45());
		}
		    |
		kw=SCAN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSCANKeyword_46());
		}
		    |
		kw=START
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSTARTKeyword_47());
		}
		    |
		kw=NODE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getNODEKeyword_48());
		}
		    |
		kw=RELATIONSHIP
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getRELATIONSHIPKeyword_49());
		}
		    |
		kw=REL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getRELKeyword_50());
		}
		    |
		kw=WHERE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getWHEREKeyword_51());
		}
		    |
		kw=SHORTESTPATH
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSHORTESTPATHKeyword_52());
		}
		    |
		kw=ALLSHORTESTPATHS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getALLSHORTESTPATHSKeyword_53());
		}
		    |
		kw=OR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getORKeyword_54());
		}
		    |
		kw=XOR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getXORKeyword_55());
		}
		    |
		kw=AND
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getANDKeyword_56());
		}
		    |
		kw=NOT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getNOTKeyword_57());
		}
		    |
		kw=STARTS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSTARTSKeyword_58());
		}
		    |
		kw=ENDS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getENDSKeyword_59());
		}
		    |
		kw=CONTAINS
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCONTAINSKeyword_60());
		}
		    |
		kw=NULL
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getNULLKeyword_61());
		}
		    |
		kw=TRUE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getTRUEKeyword_62());
		}
		    |
		kw=FALSE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getFALSEKeyword_63());
		}
		    |
		kw=COUNT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCOUNTKeyword_64());
		}
		    |
		kw=FILTER
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getFILTERKeyword_65());
		}
		    |
		kw=EXTRACT
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getEXTRACTKeyword_66());
		}
		    |
		kw=ANY
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getANYKeyword_67());
		}
		    |
		kw=NONE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getNONEKeyword_68());
		}
		    |
		kw=SINGLE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getSINGLEKeyword_69());
		}
		    |
		kw=REDUCE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getREDUCEKeyword_70());
		}
		    |
		kw=CASE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getCASEKeyword_71());
		}
		    |
		kw=ELSE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getELSEKeyword_72());
		}
		    |
		kw=END
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getENDKeyword_73());
		}
		    |
		kw=WHEN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getWHENKeyword_74());
		}
		    |
		kw=THEN
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLIC_NAME_XAccess().getTHENKeyword_75());
		}
	)
;
