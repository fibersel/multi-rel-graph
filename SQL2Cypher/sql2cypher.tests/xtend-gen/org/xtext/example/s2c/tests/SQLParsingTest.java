/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.s2c.tests;

import java.io.File;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

/* @ExtendWith(/* name is null */)
@InjectWith(SQLInjectorProvider.class) */@SuppressWarnings("all")
public class SQLParsingTest {
  /* @Inject
   */private /* ParseHelper<Model> */Object parseHelper;

  @Test
  public void loadModel() {
    throw new Error("Unresolved compilation problems:"
      + "\nselect cannot be resolved to a type."
      + "\nThe method or field org is undefined"
      + "\nXMIResourceImpl cannot be resolved."
      + "\nThe method or field URI is undefined"
      + "\n+ cannot be resolved."
      + "\nThe method println(Object) is undefined"
      + "\nThe method println(String) is undefined"
      + "\nThe field SQLParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\neclipse cannot be resolved"
      + "\nemf cannot be resolved"
      + "\necore cannot be resolved"
      + "\nxmi cannot be resolved"
      + "\nXMLResource cannot be resolved"
      + "\nOPTION_ENCODING cannot be resolved"
      + "\nparse cannot be resolved"
      + "\n!== cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\ncreateURI cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ngetContents cannot be resolved"
      + "\nadd cannot be resolved"
      + "\neResource cannot be resolved"
      + "\ngetContents cannot be resolved"
      + "\nget cannot be resolved"
      + "\nsave cannot be resolved"
      + "\ngetStatements cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  public String readFile(final String filePath) {
    throw new Error("Unresolved compilation problems:"
      + "\n!== cannot be resolved.");
  }

  public void getFileList(final List<File> filelist, final String strPath) {
    throw new Error("Unresolved compilation problems:"
      + "\n!== cannot be resolved.");
  }
}
