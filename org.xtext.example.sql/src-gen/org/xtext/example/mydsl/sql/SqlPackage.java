/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.sql;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.sql.SqlFactory
 * @model kind="package"
 * @generated
 */
public interface SqlPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "sql";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Sql";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "sql";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SqlPackage eINSTANCE = org.xtext.example.mydsl.sql.impl.SqlPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.ModelImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Queries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__QUERIES = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.QueryImpl <em>Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.QueryImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getQuery()
   * @generated
   */
  int QUERY = 1;

  /**
   * The feature id for the '<em><b>Select Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__SELECT_CLAUSE = 0;

  /**
   * The feature id for the '<em><b>From Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__FROM_CLAUSE = 1;

  /**
   * The feature id for the '<em><b>Where Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__WHERE_CLAUSE = 2;

  /**
   * The feature id for the '<em><b>Group Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__GROUP_CLAUSE = 3;

  /**
   * The feature id for the '<em><b>Having Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__HAVING_CLAUSE = 4;

  /**
   * The number of structural features of the '<em>Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.SelectSectionImpl <em>Select Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.SelectSectionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getSelectSection()
   * @generated
   */
  int SELECT_SECTION = 2;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_SECTION__EXPRESSIONS = 0;

  /**
   * The number of structural features of the '<em>Select Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.fromSectionImpl <em>from Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.fromSectionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getfromSection()
   * @generated
   */
  int FROM_SECTION = 3;

  /**
   * The feature id for the '<em><b>From Item</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_SECTION__FROM_ITEM = 0;

  /**
   * The number of structural features of the '<em>from Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.FromItemImpl <em>From Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.FromItemImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getFromItem()
   * @generated
   */
  int FROM_ITEM = 4;

  /**
   * The feature id for the '<em><b>Tbl</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_ITEM__TBL = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_ITEM__EXPRESSIONS = 1;

  /**
   * The feature id for the '<em><b>Select expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_ITEM__SELECT_EXPR = 2;

  /**
   * The number of structural features of the '<em>From Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FROM_ITEM_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.TableImpl <em>Table</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.TableImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getTable()
   * @generated
   */
  int TABLE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Table</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.WhereClauseImpl <em>Where Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.WhereClauseImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getWhereClause()
   * @generated
   */
  int WHERE_CLAUSE = 6;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHERE_CLAUSE__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Where Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHERE_CLAUSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.ExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LHS = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RHS = 1;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__FACTOR = 2;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPR = 3;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BINEXP = 4;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ATTRIBUTE_LOOKUP = 5;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.ColumnImpl <em>Column</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.ColumnImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getColumn()
   * @generated
   */
  int COLUMN = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__NAME = 0;

  /**
   * The number of structural features of the '<em>Column</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.GroupClauseImpl <em>Group Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.GroupClauseImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getGroupClause()
   * @generated
   */
  int GROUP_CLAUSE = 9;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_CLAUSE__EXPRESSIONS = 0;

  /**
   * The number of structural features of the '<em>Group Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GROUP_CLAUSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.HavingClauseImpl <em>Having Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.HavingClauseImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getHavingClause()
   * @generated
   */
  int HAVING_CLAUSE = 10;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HAVING_CLAUSE__EXPR = 0;

  /**
   * The number of structural features of the '<em>Having Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HAVING_CLAUSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.AttributeLookupImpl <em>Attribute Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.AttributeLookupImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAttributeLookup()
   * @generated
   */
  int ATTRIBUTE_LOOKUP = 11;

  /**
   * The feature id for the '<em><b>Attribute Key Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME = 0;

  /**
   * The number of structural features of the '<em>Attribute Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_LOOKUP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.FunctionInvocationImpl <em>Function Invocation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.FunctionInvocationImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getFunctionInvocation()
   * @generated
   */
  int FUNCTION_INVOCATION = 12;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__FUNCTION_NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__PARAMETER = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Function Invocation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.VariableDeclarationImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getVariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__NAME = 0;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.LiteralImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 14;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.BooleanLiteralImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getBooleanLiteral()
   * @generated
   */
  int BOOLEAN_LITERAL = 15;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__LHS = LITERAL__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__RHS = LITERAL__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__FACTOR = LITERAL__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__EXPR = LITERAL__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__BINEXP = LITERAL__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__ATTRIBUTE_LOOKUP = LITERAL__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__VALUE = LITERAL__VALUE;

  /**
   * The number of structural features of the '<em>Boolean Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.StringLiteralImpl <em>String Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.StringLiteralImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStringLiteral()
   * @generated
   */
  int STRING_LITERAL = 16;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__LHS = LITERAL__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__RHS = LITERAL__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__FACTOR = LITERAL__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__EXPR = LITERAL__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__BINEXP = LITERAL__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__ATTRIBUTE_LOOKUP = LITERAL__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__VALUE = LITERAL__VALUE;

  /**
   * The number of structural features of the '<em>String Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.NumberLiteralImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getNumberLiteral()
   * @generated
   */
  int NUMBER_LITERAL = 17;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__LHS = LITERAL__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__RHS = LITERAL__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__FACTOR = LITERAL__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__EXPR = LITERAL__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__BINEXP = LITERAL__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__ATTRIBUTE_LOOKUP = LITERAL__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__VALUE = LITERAL__VALUE;

  /**
   * The number of structural features of the '<em>Number Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.OrExpressionImpl <em>Or Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.OrExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getOrExpression()
   * @generated
   */
  int OR_EXPRESSION = 18;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Or Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.XorExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getXorExpression()
   * @generated
   */
  int XOR_EXPRESSION = 19;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Xor Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.AndExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 20;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.NotExpressionImpl <em>Not Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.NotExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getNotExpression()
   * @generated
   */
  int NOT_EXPRESSION = 21;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Not Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.ComparisonExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getComparisonExpression()
   * @generated
   */
  int COMPARISON_EXPRESSION = 22;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.AddOrSubtractExpressionImpl <em>Add Or Subtract Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.AddOrSubtractExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAddOrSubtractExpression()
   * @generated
   */
  int ADD_OR_SUBTRACT_EXPRESSION = 23;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Add Or Subtract Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.MultiplyDivideModuloExpressionImpl <em>Multiply Divide Modulo Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.MultiplyDivideModuloExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getMultiplyDivideModuloExpression()
   * @generated
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION = 24;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Multiply Divide Modulo Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.PowerOfExpressionImpl <em>Power Of Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.PowerOfExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getPowerOfExpression()
   * @generated
   */
  int POWER_OF_EXPRESSION = 25;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Power Of Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.UnaryAddOrSubtractExpressionImpl <em>Unary Add Or Subtract Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.UnaryAddOrSubtractExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getUnaryAddOrSubtractExpression()
   * @generated
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION = 26;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unary Add Or Subtract Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.StringListNullOperatorExpressionImpl <em>String List Null Operator Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.StringListNullOperatorExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStringListNullOperatorExpression()
   * @generated
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION = 27;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>String List Null Operator Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.RegExpMatchingExpressionImpl <em>Reg Exp Matching Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.RegExpMatchingExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getRegExpMatchingExpression()
   * @generated
   */
  int REG_EXP_MATCHING_EXPRESSION = 28;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Reg Exp Matching Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.InCollectionExpressionImpl <em>In Collection Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.InCollectionExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getInCollectionExpression()
   * @generated
   */
  int IN_COLLECTION_EXPRESSION = 29;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>In Collection Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.StartsWithExpressionImpl <em>Starts With Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.StartsWithExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStartsWithExpression()
   * @generated
   */
  int STARTS_WITH_EXPRESSION = 30;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Starts With Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.EndsWithExpressionImpl <em>Ends With Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.EndsWithExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getEndsWithExpression()
   * @generated
   */
  int ENDS_WITH_EXPRESSION = 31;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ends With Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.ContainsExpressionImpl <em>Contains Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.ContainsExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getContainsExpression()
   * @generated
   */
  int CONTAINS_EXPRESSION = 32;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Contains Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.IsNullExpressionImpl <em>Is Null Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.IsNullExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getIsNullExpression()
   * @generated
   */
  int IS_NULL_EXPRESSION = 33;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The number of structural features of the '<em>Is Null Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.IsNotNullExpressionImpl <em>Is Not Null Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.IsNotNullExpressionImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getIsNotNullExpression()
   * @generated
   */
  int IS_NOT_NULL_EXPRESSION = 34;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The number of structural features of the '<em>Is Not Null Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.CountImpl <em>Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.CountImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getCount()
   * @generated
   */
  int COUNT = 35;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The number of structural features of the '<em>Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.sql.impl.VariableRefImpl <em>Variable Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.sql.impl.VariableRefImpl
   * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getVariableRef()
   * @generated
   */
  int VARIABLE_REF = 36;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__LHS = EXPRESSION__LHS;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__RHS = EXPRESSION__RHS;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__FACTOR = EXPRESSION__FACTOR;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__EXPR = EXPRESSION__EXPR;

  /**
   * The feature id for the '<em><b>Binexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__BINEXP = EXPRESSION__BINEXP;

  /**
   * The feature id for the '<em><b>Attribute Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__ATTRIBUTE_LOOKUP = EXPRESSION__ATTRIBUTE_LOOKUP;

  /**
   * The feature id for the '<em><b>Variable Ref</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__VARIABLE_REF = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.example.mydsl.sql.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.Model#getQueries <em>Queries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Queries</em>'.
   * @see org.xtext.example.mydsl.sql.Model#getQueries()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Queries();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Query <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query</em>'.
   * @see org.xtext.example.mydsl.sql.Query
   * @generated
   */
  EClass getQuery();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Query#getSelectClause <em>Select Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Select Clause</em>'.
   * @see org.xtext.example.mydsl.sql.Query#getSelectClause()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_SelectClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Query#getFromClause <em>From Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>From Clause</em>'.
   * @see org.xtext.example.mydsl.sql.Query#getFromClause()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_FromClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Query#getWhereClause <em>Where Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where Clause</em>'.
   * @see org.xtext.example.mydsl.sql.Query#getWhereClause()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_WhereClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Query#getGroupClause <em>Group Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Group Clause</em>'.
   * @see org.xtext.example.mydsl.sql.Query#getGroupClause()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_GroupClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Query#getHavingClause <em>Having Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Having Clause</em>'.
   * @see org.xtext.example.mydsl.sql.Query#getHavingClause()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_HavingClause();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.SelectSection <em>Select Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Select Section</em>'.
   * @see org.xtext.example.mydsl.sql.SelectSection
   * @generated
   */
  EClass getSelectSection();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.SelectSection#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.mydsl.sql.SelectSection#getExpressions()
   * @see #getSelectSection()
   * @generated
   */
  EReference getSelectSection_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.fromSection <em>from Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>from Section</em>'.
   * @see org.xtext.example.mydsl.sql.fromSection
   * @generated
   */
  EClass getfromSection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.fromSection#getFromItem <em>From Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>From Item</em>'.
   * @see org.xtext.example.mydsl.sql.fromSection#getFromItem()
   * @see #getfromSection()
   * @generated
   */
  EReference getfromSection_FromItem();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.FromItem <em>From Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>From Item</em>'.
   * @see org.xtext.example.mydsl.sql.FromItem
   * @generated
   */
  EClass getFromItem();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.FromItem#getTbl <em>Tbl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tbl</em>'.
   * @see org.xtext.example.mydsl.sql.FromItem#getTbl()
   * @see #getFromItem()
   * @generated
   */
  EReference getFromItem_Tbl();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.FromItem#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.mydsl.sql.FromItem#getExpressions()
   * @see #getFromItem()
   * @generated
   */
  EReference getFromItem_Expressions();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.FromItem#getSelect_expr <em>Select expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Select expr</em>'.
   * @see org.xtext.example.mydsl.sql.FromItem#getSelect_expr()
   * @see #getFromItem()
   * @generated
   */
  EReference getFromItem_Select_expr();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Table <em>Table</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Table</em>'.
   * @see org.xtext.example.mydsl.sql.Table
   * @generated
   */
  EClass getTable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.Table#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.sql.Table#getName()
   * @see #getTable()
   * @generated
   */
  EAttribute getTable_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.WhereClause <em>Where Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Where Clause</em>'.
   * @see org.xtext.example.mydsl.sql.WhereClause
   * @generated
   */
  EClass getWhereClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.WhereClause#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.sql.WhereClause#getExpression()
   * @see #getWhereClause()
   * @generated
   */
  EReference getWhereClause_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.sql.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getLhs <em>Lhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lhs</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getLhs()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Lhs();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rhs</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getRhs()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Rhs();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getFactor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Factor</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getFactor()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Factor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getExpr()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Expr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getBinexp <em>Binexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Binexp</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getBinexp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Binexp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.Expression#getAttributeLookup <em>Attribute Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attribute Lookup</em>'.
   * @see org.xtext.example.mydsl.sql.Expression#getAttributeLookup()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_AttributeLookup();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Column <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Column</em>'.
   * @see org.xtext.example.mydsl.sql.Column
   * @generated
   */
  EClass getColumn();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.Column#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.sql.Column#getName()
   * @see #getColumn()
   * @generated
   */
  EAttribute getColumn_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.GroupClause <em>Group Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Group Clause</em>'.
   * @see org.xtext.example.mydsl.sql.GroupClause
   * @generated
   */
  EClass getGroupClause();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.GroupClause#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.mydsl.sql.GroupClause#getExpressions()
   * @see #getGroupClause()
   * @generated
   */
  EReference getGroupClause_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.HavingClause <em>Having Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Having Clause</em>'.
   * @see org.xtext.example.mydsl.sql.HavingClause
   * @generated
   */
  EClass getHavingClause();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.HavingClause#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.example.mydsl.sql.HavingClause#getExpr()
   * @see #getHavingClause()
   * @generated
   */
  EReference getHavingClause_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.AttributeLookup <em>Attribute Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute Lookup</em>'.
   * @see org.xtext.example.mydsl.sql.AttributeLookup
   * @generated
   */
  EClass getAttributeLookup();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.AttributeLookup#getAttributeKeyName <em>Attribute Key Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Attribute Key Name</em>'.
   * @see org.xtext.example.mydsl.sql.AttributeLookup#getAttributeKeyName()
   * @see #getAttributeLookup()
   * @generated
   */
  EAttribute getAttributeLookup_AttributeKeyName();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.FunctionInvocation <em>Function Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Invocation</em>'.
   * @see org.xtext.example.mydsl.sql.FunctionInvocation
   * @generated
   */
  EClass getFunctionInvocation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.FunctionInvocation#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function Name</em>'.
   * @see org.xtext.example.mydsl.sql.FunctionInvocation#getFunctionName()
   * @see #getFunctionInvocation()
   * @generated
   */
  EAttribute getFunctionInvocation_FunctionName();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.FunctionInvocation#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see org.xtext.example.mydsl.sql.FunctionInvocation#getParameter()
   * @see #getFunctionInvocation()
   * @generated
   */
  EReference getFunctionInvocation_Parameter();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see org.xtext.example.mydsl.sql.VariableDeclaration
   * @generated
   */
  EClass getVariableDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.VariableDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.sql.VariableDeclaration#getName()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.example.mydsl.sql.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.Literal#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.mydsl.sql.Literal#getValue()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.BooleanLiteral <em>Boolean Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal</em>'.
   * @see org.xtext.example.mydsl.sql.BooleanLiteral
   * @generated
   */
  EClass getBooleanLiteral();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal</em>'.
   * @see org.xtext.example.mydsl.sql.StringLiteral
   * @generated
   */
  EClass getStringLiteral();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.NumberLiteral <em>Number Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Literal</em>'.
   * @see org.xtext.example.mydsl.sql.NumberLiteral
   * @generated
   */
  EClass getNumberLiteral();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.OrExpression <em>Or Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression</em>'.
   * @see org.xtext.example.mydsl.sql.OrExpression
   * @generated
   */
  EClass getOrExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.OrExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.OrExpression#getLeft()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.OrExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.OrExpression#getOperator()
   * @see #getOrExpression()
   * @generated
   */
  EAttribute getOrExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.OrExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.OrExpression#getRight()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.XorExpression <em>Xor Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Xor Expression</em>'.
   * @see org.xtext.example.mydsl.sql.XorExpression
   * @generated
   */
  EClass getXorExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.XorExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.XorExpression#getLeft()
   * @see #getXorExpression()
   * @generated
   */
  EReference getXorExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.XorExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.XorExpression#getOperator()
   * @see #getXorExpression()
   * @generated
   */
  EAttribute getXorExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.XorExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.XorExpression#getRight()
   * @see #getXorExpression()
   * @generated
   */
  EReference getXorExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see org.xtext.example.mydsl.sql.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.AndExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.AndExpression#getLeft()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.AndExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.AndExpression#getOperator()
   * @see #getAndExpression()
   * @generated
   */
  EAttribute getAndExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.AndExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.AndExpression#getRight()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.NotExpression <em>Not Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Expression</em>'.
   * @see org.xtext.example.mydsl.sql.NotExpression
   * @generated
   */
  EClass getNotExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.NotExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.NotExpression#getOperator()
   * @see #getNotExpression()
   * @generated
   */
  EAttribute getNotExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.NotExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.NotExpression#getLeft()
   * @see #getNotExpression()
   * @generated
   */
  EReference getNotExpression_Left();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.ComparisonExpression <em>Comparison Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison Expression</em>'.
   * @see org.xtext.example.mydsl.sql.ComparisonExpression
   * @generated
   */
  EClass getComparisonExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.ComparisonExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.ComparisonExpression#getLeft()
   * @see #getComparisonExpression()
   * @generated
   */
  EReference getComparisonExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.ComparisonExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.ComparisonExpression#getOperator()
   * @see #getComparisonExpression()
   * @generated
   */
  EAttribute getComparisonExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.ComparisonExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.ComparisonExpression#getRight()
   * @see #getComparisonExpression()
   * @generated
   */
  EReference getComparisonExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.AddOrSubtractExpression <em>Add Or Subtract Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Or Subtract Expression</em>'.
   * @see org.xtext.example.mydsl.sql.AddOrSubtractExpression
   * @generated
   */
  EClass getAddOrSubtractExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.AddOrSubtractExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.AddOrSubtractExpression#getLeft()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EReference getAddOrSubtractExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.AddOrSubtractExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.AddOrSubtractExpression#getOperator()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EAttribute getAddOrSubtractExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.AddOrSubtractExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.AddOrSubtractExpression#getRight()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EReference getAddOrSubtractExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression <em>Multiply Divide Modulo Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply Divide Modulo Expression</em>'.
   * @see org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression
   * @generated
   */
  EClass getMultiplyDivideModuloExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getLeft()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EReference getMultiplyDivideModuloExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getOperator()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EAttribute getMultiplyDivideModuloExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.MultiplyDivideModuloExpression#getRight()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EReference getMultiplyDivideModuloExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.PowerOfExpression <em>Power Of Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Power Of Expression</em>'.
   * @see org.xtext.example.mydsl.sql.PowerOfExpression
   * @generated
   */
  EClass getPowerOfExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.PowerOfExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.PowerOfExpression#getLeft()
   * @see #getPowerOfExpression()
   * @generated
   */
  EReference getPowerOfExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.PowerOfExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.PowerOfExpression#getOperator()
   * @see #getPowerOfExpression()
   * @generated
   */
  EAttribute getPowerOfExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.PowerOfExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.PowerOfExpression#getRight()
   * @see #getPowerOfExpression()
   * @generated
   */
  EReference getPowerOfExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression <em>Unary Add Or Subtract Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Add Or Subtract Expression</em>'.
   * @see org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression
   * @generated
   */
  EClass getUnaryAddOrSubtractExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression#getOperator()
   * @see #getUnaryAddOrSubtractExpression()
   * @generated
   */
  EAttribute getUnaryAddOrSubtractExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.UnaryAddOrSubtractExpression#getLeft()
   * @see #getUnaryAddOrSubtractExpression()
   * @generated
   */
  EReference getUnaryAddOrSubtractExpression_Left();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.StringListNullOperatorExpression <em>String List Null Operator Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String List Null Operator Expression</em>'.
   * @see org.xtext.example.mydsl.sql.StringListNullOperatorExpression
   * @generated
   */
  EClass getStringListNullOperatorExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.StringListNullOperatorExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.sql.StringListNullOperatorExpression#getLeft()
   * @see #getStringListNullOperatorExpression()
   * @generated
   */
  EReference getStringListNullOperatorExpression_Left();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.sql.StringListNullOperatorExpression#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.mydsl.sql.StringListNullOperatorExpression#getExpressions()
   * @see #getStringListNullOperatorExpression()
   * @generated
   */
  EReference getStringListNullOperatorExpression_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.RegExpMatchingExpression <em>Reg Exp Matching Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reg Exp Matching Expression</em>'.
   * @see org.xtext.example.mydsl.sql.RegExpMatchingExpression
   * @generated
   */
  EClass getRegExpMatchingExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.RegExpMatchingExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.RegExpMatchingExpression#getRight()
   * @see #getRegExpMatchingExpression()
   * @generated
   */
  EReference getRegExpMatchingExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.InCollectionExpression <em>In Collection Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>In Collection Expression</em>'.
   * @see org.xtext.example.mydsl.sql.InCollectionExpression
   * @generated
   */
  EClass getInCollectionExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.InCollectionExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.InCollectionExpression#getRight()
   * @see #getInCollectionExpression()
   * @generated
   */
  EReference getInCollectionExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.StartsWithExpression <em>Starts With Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Starts With Expression</em>'.
   * @see org.xtext.example.mydsl.sql.StartsWithExpression
   * @generated
   */
  EClass getStartsWithExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.StartsWithExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.StartsWithExpression#getRight()
   * @see #getStartsWithExpression()
   * @generated
   */
  EReference getStartsWithExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.EndsWithExpression <em>Ends With Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ends With Expression</em>'.
   * @see org.xtext.example.mydsl.sql.EndsWithExpression
   * @generated
   */
  EClass getEndsWithExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.EndsWithExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.EndsWithExpression#getRight()
   * @see #getEndsWithExpression()
   * @generated
   */
  EReference getEndsWithExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.ContainsExpression <em>Contains Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contains Expression</em>'.
   * @see org.xtext.example.mydsl.sql.ContainsExpression
   * @generated
   */
  EClass getContainsExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.ContainsExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.sql.ContainsExpression#getRight()
   * @see #getContainsExpression()
   * @generated
   */
  EReference getContainsExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.IsNullExpression <em>Is Null Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Null Expression</em>'.
   * @see org.xtext.example.mydsl.sql.IsNullExpression
   * @generated
   */
  EClass getIsNullExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.IsNotNullExpression <em>Is Not Null Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Not Null Expression</em>'.
   * @see org.xtext.example.mydsl.sql.IsNotNullExpression
   * @generated
   */
  EClass getIsNotNullExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.Count <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Count</em>'.
   * @see org.xtext.example.mydsl.sql.Count
   * @generated
   */
  EClass getCount();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.sql.VariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Ref</em>'.
   * @see org.xtext.example.mydsl.sql.VariableRef
   * @generated
   */
  EClass getVariableRef();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.sql.VariableRef#getVariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable Ref</em>'.
   * @see org.xtext.example.mydsl.sql.VariableRef#getVariableRef()
   * @see #getVariableRef()
   * @generated
   */
  EReference getVariableRef_VariableRef();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SqlFactory getSqlFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.ModelImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Queries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__QUERIES = eINSTANCE.getModel_Queries();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.QueryImpl <em>Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.QueryImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getQuery()
     * @generated
     */
    EClass QUERY = eINSTANCE.getQuery();

    /**
     * The meta object literal for the '<em><b>Select Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__SELECT_CLAUSE = eINSTANCE.getQuery_SelectClause();

    /**
     * The meta object literal for the '<em><b>From Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__FROM_CLAUSE = eINSTANCE.getQuery_FromClause();

    /**
     * The meta object literal for the '<em><b>Where Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__WHERE_CLAUSE = eINSTANCE.getQuery_WhereClause();

    /**
     * The meta object literal for the '<em><b>Group Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__GROUP_CLAUSE = eINSTANCE.getQuery_GroupClause();

    /**
     * The meta object literal for the '<em><b>Having Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__HAVING_CLAUSE = eINSTANCE.getQuery_HavingClause();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.SelectSectionImpl <em>Select Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.SelectSectionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getSelectSection()
     * @generated
     */
    EClass SELECT_SECTION = eINSTANCE.getSelectSection();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT_SECTION__EXPRESSIONS = eINSTANCE.getSelectSection_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.fromSectionImpl <em>from Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.fromSectionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getfromSection()
     * @generated
     */
    EClass FROM_SECTION = eINSTANCE.getfromSection();

    /**
     * The meta object literal for the '<em><b>From Item</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FROM_SECTION__FROM_ITEM = eINSTANCE.getfromSection_FromItem();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.FromItemImpl <em>From Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.FromItemImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getFromItem()
     * @generated
     */
    EClass FROM_ITEM = eINSTANCE.getFromItem();

    /**
     * The meta object literal for the '<em><b>Tbl</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FROM_ITEM__TBL = eINSTANCE.getFromItem_Tbl();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FROM_ITEM__EXPRESSIONS = eINSTANCE.getFromItem_Expressions();

    /**
     * The meta object literal for the '<em><b>Select expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FROM_ITEM__SELECT_EXPR = eINSTANCE.getFromItem_Select_expr();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.TableImpl <em>Table</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.TableImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getTable()
     * @generated
     */
    EClass TABLE = eINSTANCE.getTable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TABLE__NAME = eINSTANCE.getTable_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.WhereClauseImpl <em>Where Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.WhereClauseImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getWhereClause()
     * @generated
     */
    EClass WHERE_CLAUSE = eINSTANCE.getWhereClause();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHERE_CLAUSE__EXPRESSION = eINSTANCE.getWhereClause_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.ExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Lhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LHS = eINSTANCE.getExpression_Lhs();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RHS = eINSTANCE.getExpression_Rhs();

    /**
     * The meta object literal for the '<em><b>Factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__FACTOR = eINSTANCE.getExpression_Factor();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPR = eINSTANCE.getExpression_Expr();

    /**
     * The meta object literal for the '<em><b>Binexp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__BINEXP = eINSTANCE.getExpression_Binexp();

    /**
     * The meta object literal for the '<em><b>Attribute Lookup</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__ATTRIBUTE_LOOKUP = eINSTANCE.getExpression_AttributeLookup();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.ColumnImpl <em>Column</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.ColumnImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getColumn()
     * @generated
     */
    EClass COLUMN = eINSTANCE.getColumn();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__NAME = eINSTANCE.getColumn_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.GroupClauseImpl <em>Group Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.GroupClauseImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getGroupClause()
     * @generated
     */
    EClass GROUP_CLAUSE = eINSTANCE.getGroupClause();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GROUP_CLAUSE__EXPRESSIONS = eINSTANCE.getGroupClause_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.HavingClauseImpl <em>Having Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.HavingClauseImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getHavingClause()
     * @generated
     */
    EClass HAVING_CLAUSE = eINSTANCE.getHavingClause();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference HAVING_CLAUSE__EXPR = eINSTANCE.getHavingClause_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.AttributeLookupImpl <em>Attribute Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.AttributeLookupImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAttributeLookup()
     * @generated
     */
    EClass ATTRIBUTE_LOOKUP = eINSTANCE.getAttributeLookup();

    /**
     * The meta object literal for the '<em><b>Attribute Key Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME = eINSTANCE.getAttributeLookup_AttributeKeyName();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.FunctionInvocationImpl <em>Function Invocation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.FunctionInvocationImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getFunctionInvocation()
     * @generated
     */
    EClass FUNCTION_INVOCATION = eINSTANCE.getFunctionInvocation();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_INVOCATION__FUNCTION_NAME = eINSTANCE.getFunctionInvocation_FunctionName();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_INVOCATION__PARAMETER = eINSTANCE.getFunctionInvocation_Parameter();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.VariableDeclarationImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getVariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__NAME = eINSTANCE.getVariableDeclaration_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.LiteralImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__VALUE = eINSTANCE.getLiteral_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.BooleanLiteralImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getBooleanLiteral()
     * @generated
     */
    EClass BOOLEAN_LITERAL = eINSTANCE.getBooleanLiteral();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.StringLiteralImpl <em>String Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.StringLiteralImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStringLiteral()
     * @generated
     */
    EClass STRING_LITERAL = eINSTANCE.getStringLiteral();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.NumberLiteralImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getNumberLiteral()
     * @generated
     */
    EClass NUMBER_LITERAL = eINSTANCE.getNumberLiteral();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.OrExpressionImpl <em>Or Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.OrExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getOrExpression()
     * @generated
     */
    EClass OR_EXPRESSION = eINSTANCE.getOrExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__LEFT = eINSTANCE.getOrExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_EXPRESSION__OPERATOR = eINSTANCE.getOrExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__RIGHT = eINSTANCE.getOrExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.XorExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getXorExpression()
     * @generated
     */
    EClass XOR_EXPRESSION = eINSTANCE.getXorExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference XOR_EXPRESSION__LEFT = eINSTANCE.getXorExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute XOR_EXPRESSION__OPERATOR = eINSTANCE.getXorExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference XOR_EXPRESSION__RIGHT = eINSTANCE.getXorExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.AndExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__LEFT = eINSTANCE.getAndExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION__OPERATOR = eINSTANCE.getAndExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__RIGHT = eINSTANCE.getAndExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.NotExpressionImpl <em>Not Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.NotExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getNotExpression()
     * @generated
     */
    EClass NOT_EXPRESSION = eINSTANCE.getNotExpression();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_EXPRESSION__OPERATOR = eINSTANCE.getNotExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_EXPRESSION__LEFT = eINSTANCE.getNotExpression_Left();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.ComparisonExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getComparisonExpression()
     * @generated
     */
    EClass COMPARISON_EXPRESSION = eINSTANCE.getComparisonExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON_EXPRESSION__LEFT = eINSTANCE.getComparisonExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON_EXPRESSION__OPERATOR = eINSTANCE.getComparisonExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON_EXPRESSION__RIGHT = eINSTANCE.getComparisonExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.AddOrSubtractExpressionImpl <em>Add Or Subtract Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.AddOrSubtractExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getAddOrSubtractExpression()
     * @generated
     */
    EClass ADD_OR_SUBTRACT_EXPRESSION = eINSTANCE.getAddOrSubtractExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OR_SUBTRACT_EXPRESSION__LEFT = eINSTANCE.getAddOrSubtractExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = eINSTANCE.getAddOrSubtractExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OR_SUBTRACT_EXPRESSION__RIGHT = eINSTANCE.getAddOrSubtractExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.MultiplyDivideModuloExpressionImpl <em>Multiply Divide Modulo Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.MultiplyDivideModuloExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getMultiplyDivideModuloExpression()
     * @generated
     */
    EClass MULTIPLY_DIVIDE_MODULO_EXPRESSION = eINSTANCE.getMultiplyDivideModuloExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_DIVIDE_MODULO_EXPRESSION__LEFT = eINSTANCE.getMultiplyDivideModuloExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLY_DIVIDE_MODULO_EXPRESSION__OPERATOR = eINSTANCE.getMultiplyDivideModuloExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_DIVIDE_MODULO_EXPRESSION__RIGHT = eINSTANCE.getMultiplyDivideModuloExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.PowerOfExpressionImpl <em>Power Of Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.PowerOfExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getPowerOfExpression()
     * @generated
     */
    EClass POWER_OF_EXPRESSION = eINSTANCE.getPowerOfExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POWER_OF_EXPRESSION__LEFT = eINSTANCE.getPowerOfExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POWER_OF_EXPRESSION__OPERATOR = eINSTANCE.getPowerOfExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POWER_OF_EXPRESSION__RIGHT = eINSTANCE.getPowerOfExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.UnaryAddOrSubtractExpressionImpl <em>Unary Add Or Subtract Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.UnaryAddOrSubtractExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getUnaryAddOrSubtractExpression()
     * @generated
     */
    EClass UNARY_ADD_OR_SUBTRACT_EXPRESSION = eINSTANCE.getUnaryAddOrSubtractExpression();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = eINSTANCE.getUnaryAddOrSubtractExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_ADD_OR_SUBTRACT_EXPRESSION__LEFT = eINSTANCE.getUnaryAddOrSubtractExpression_Left();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.StringListNullOperatorExpressionImpl <em>String List Null Operator Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.StringListNullOperatorExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStringListNullOperatorExpression()
     * @generated
     */
    EClass STRING_LIST_NULL_OPERATOR_EXPRESSION = eINSTANCE.getStringListNullOperatorExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRING_LIST_NULL_OPERATOR_EXPRESSION__LEFT = eINSTANCE.getStringListNullOperatorExpression_Left();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRING_LIST_NULL_OPERATOR_EXPRESSION__EXPRESSIONS = eINSTANCE.getStringListNullOperatorExpression_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.RegExpMatchingExpressionImpl <em>Reg Exp Matching Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.RegExpMatchingExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getRegExpMatchingExpression()
     * @generated
     */
    EClass REG_EXP_MATCHING_EXPRESSION = eINSTANCE.getRegExpMatchingExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REG_EXP_MATCHING_EXPRESSION__RIGHT = eINSTANCE.getRegExpMatchingExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.InCollectionExpressionImpl <em>In Collection Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.InCollectionExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getInCollectionExpression()
     * @generated
     */
    EClass IN_COLLECTION_EXPRESSION = eINSTANCE.getInCollectionExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IN_COLLECTION_EXPRESSION__RIGHT = eINSTANCE.getInCollectionExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.StartsWithExpressionImpl <em>Starts With Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.StartsWithExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getStartsWithExpression()
     * @generated
     */
    EClass STARTS_WITH_EXPRESSION = eINSTANCE.getStartsWithExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STARTS_WITH_EXPRESSION__RIGHT = eINSTANCE.getStartsWithExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.EndsWithExpressionImpl <em>Ends With Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.EndsWithExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getEndsWithExpression()
     * @generated
     */
    EClass ENDS_WITH_EXPRESSION = eINSTANCE.getEndsWithExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENDS_WITH_EXPRESSION__RIGHT = eINSTANCE.getEndsWithExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.ContainsExpressionImpl <em>Contains Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.ContainsExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getContainsExpression()
     * @generated
     */
    EClass CONTAINS_EXPRESSION = eINSTANCE.getContainsExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTAINS_EXPRESSION__RIGHT = eINSTANCE.getContainsExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.IsNullExpressionImpl <em>Is Null Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.IsNullExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getIsNullExpression()
     * @generated
     */
    EClass IS_NULL_EXPRESSION = eINSTANCE.getIsNullExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.IsNotNullExpressionImpl <em>Is Not Null Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.IsNotNullExpressionImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getIsNotNullExpression()
     * @generated
     */
    EClass IS_NOT_NULL_EXPRESSION = eINSTANCE.getIsNotNullExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.CountImpl <em>Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.CountImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getCount()
     * @generated
     */
    EClass COUNT = eINSTANCE.getCount();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.sql.impl.VariableRefImpl <em>Variable Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.sql.impl.VariableRefImpl
     * @see org.xtext.example.mydsl.sql.impl.SqlPackageImpl#getVariableRef()
     * @generated
     */
    EClass VARIABLE_REF = eINSTANCE.getVariableRef();

    /**
     * The meta object literal for the '<em><b>Variable Ref</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REF__VARIABLE_REF = eINSTANCE.getVariableRef_VariableRef();

  }

} //SqlPackage
