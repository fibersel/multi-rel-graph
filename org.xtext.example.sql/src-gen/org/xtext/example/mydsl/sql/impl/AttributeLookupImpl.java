/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.sql.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.sql.AttributeLookup;
import org.xtext.example.mydsl.sql.SqlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute Lookup</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.sql.impl.AttributeLookupImpl#getAttributeKeyName <em>Attribute Key Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeLookupImpl extends MinimalEObjectImpl.Container implements AttributeLookup
{
  /**
   * The default value of the '{@link #getAttributeKeyName() <em>Attribute Key Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeKeyName()
   * @generated
   * @ordered
   */
  protected static final String ATTRIBUTE_KEY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttributeKeyName() <em>Attribute Key Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeKeyName()
   * @generated
   * @ordered
   */
  protected String attributeKeyName = ATTRIBUTE_KEY_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeLookupImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SqlPackage.Literals.ATTRIBUTE_LOOKUP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttributeKeyName()
  {
    return attributeKeyName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeKeyName(String newAttributeKeyName)
  {
    String oldAttributeKeyName = attributeKeyName;
    attributeKeyName = newAttributeKeyName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SqlPackage.ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME, oldAttributeKeyName, attributeKeyName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SqlPackage.ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME:
        return getAttributeKeyName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SqlPackage.ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME:
        setAttributeKeyName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SqlPackage.ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME:
        setAttributeKeyName(ATTRIBUTE_KEY_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SqlPackage.ATTRIBUTE_LOOKUP__ATTRIBUTE_KEY_NAME:
        return ATTRIBUTE_KEY_NAME_EDEFAULT == null ? attributeKeyName != null : !ATTRIBUTE_KEY_NAME_EDEFAULT.equals(attributeKeyName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (attributeKeyName: ");
    result.append(attributeKeyName);
    result.append(')');
    return result.toString();
  }

} //AttributeLookupImpl
