/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl1.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl1.myDsl.Expression;
import org.xtext.example.mydsl1.myDsl.IdInColl;
import org.xtext.example.mydsl1.myDsl.MyDslPackage;
import org.xtext.example.mydsl1.myDsl.Reduce;
import org.xtext.example.mydsl1.myDsl.VariableDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reduce</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.ReduceImpl#getAccumulator <em>Accumulator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.ReduceImpl#getAccumulatorExpression <em>Accumulator Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.ReduceImpl#getIdInColl <em>Id In Coll</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.ReduceImpl#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReduceImpl extends ExpressionImpl implements Reduce
{
  /**
   * The cached value of the '{@link #getAccumulator() <em>Accumulator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccumulator()
   * @generated
   * @ordered
   */
  protected VariableDeclaration accumulator;

  /**
   * The cached value of the '{@link #getAccumulatorExpression() <em>Accumulator Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccumulatorExpression()
   * @generated
   * @ordered
   */
  protected Expression accumulatorExpression;

  /**
   * The cached value of the '{@link #getIdInColl() <em>Id In Coll</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdInColl()
   * @generated
   * @ordered
   */
  protected IdInColl idInColl;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReduceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.REDUCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDeclaration getAccumulator()
  {
    return accumulator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccumulator(VariableDeclaration newAccumulator, NotificationChain msgs)
  {
    VariableDeclaration oldAccumulator = accumulator;
    accumulator = newAccumulator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ACCUMULATOR, oldAccumulator, newAccumulator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccumulator(VariableDeclaration newAccumulator)
  {
    if (newAccumulator != accumulator)
    {
      NotificationChain msgs = null;
      if (accumulator != null)
        msgs = ((InternalEObject)accumulator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ACCUMULATOR, null, msgs);
      if (newAccumulator != null)
        msgs = ((InternalEObject)newAccumulator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ACCUMULATOR, null, msgs);
      msgs = basicSetAccumulator(newAccumulator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ACCUMULATOR, newAccumulator, newAccumulator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getAccumulatorExpression()
  {
    return accumulatorExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccumulatorExpression(Expression newAccumulatorExpression, NotificationChain msgs)
  {
    Expression oldAccumulatorExpression = accumulatorExpression;
    accumulatorExpression = newAccumulatorExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION, oldAccumulatorExpression, newAccumulatorExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccumulatorExpression(Expression newAccumulatorExpression)
  {
    if (newAccumulatorExpression != accumulatorExpression)
    {
      NotificationChain msgs = null;
      if (accumulatorExpression != null)
        msgs = ((InternalEObject)accumulatorExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION, null, msgs);
      if (newAccumulatorExpression != null)
        msgs = ((InternalEObject)newAccumulatorExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION, null, msgs);
      msgs = basicSetAccumulatorExpression(newAccumulatorExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION, newAccumulatorExpression, newAccumulatorExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IdInColl getIdInColl()
  {
    return idInColl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIdInColl(IdInColl newIdInColl, NotificationChain msgs)
  {
    IdInColl oldIdInColl = idInColl;
    idInColl = newIdInColl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ID_IN_COLL, oldIdInColl, newIdInColl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdInColl(IdInColl newIdInColl)
  {
    if (newIdInColl != idInColl)
    {
      NotificationChain msgs = null;
      if (idInColl != null)
        msgs = ((InternalEObject)idInColl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ID_IN_COLL, null, msgs);
      if (newIdInColl != null)
        msgs = ((InternalEObject)newIdInColl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__ID_IN_COLL, null, msgs);
      msgs = basicSetIdInColl(newIdInColl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__ID_IN_COLL, newIdInColl, newIdInColl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REDUCE__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REDUCE__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.REDUCE__ACCUMULATOR:
        return basicSetAccumulator(null, msgs);
      case MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION:
        return basicSetAccumulatorExpression(null, msgs);
      case MyDslPackage.REDUCE__ID_IN_COLL:
        return basicSetIdInColl(null, msgs);
      case MyDslPackage.REDUCE__EXPRESSION:
        return basicSetExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.REDUCE__ACCUMULATOR:
        return getAccumulator();
      case MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION:
        return getAccumulatorExpression();
      case MyDslPackage.REDUCE__ID_IN_COLL:
        return getIdInColl();
      case MyDslPackage.REDUCE__EXPRESSION:
        return getExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.REDUCE__ACCUMULATOR:
        setAccumulator((VariableDeclaration)newValue);
        return;
      case MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION:
        setAccumulatorExpression((Expression)newValue);
        return;
      case MyDslPackage.REDUCE__ID_IN_COLL:
        setIdInColl((IdInColl)newValue);
        return;
      case MyDslPackage.REDUCE__EXPRESSION:
        setExpression((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.REDUCE__ACCUMULATOR:
        setAccumulator((VariableDeclaration)null);
        return;
      case MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION:
        setAccumulatorExpression((Expression)null);
        return;
      case MyDslPackage.REDUCE__ID_IN_COLL:
        setIdInColl((IdInColl)null);
        return;
      case MyDslPackage.REDUCE__EXPRESSION:
        setExpression((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.REDUCE__ACCUMULATOR:
        return accumulator != null;
      case MyDslPackage.REDUCE__ACCUMULATOR_EXPRESSION:
        return accumulatorExpression != null;
      case MyDslPackage.REDUCE__ID_IN_COLL:
        return idInColl != null;
      case MyDslPackage.REDUCE__EXPRESSION:
        return expression != null;
    }
    return super.eIsSet(featureID);
  }

} //ReduceImpl
