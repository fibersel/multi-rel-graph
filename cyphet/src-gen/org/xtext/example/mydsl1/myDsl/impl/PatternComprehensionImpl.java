/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl1.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl1.myDsl.Expression;
import org.xtext.example.mydsl1.myDsl.MyDslPackage;
import org.xtext.example.mydsl1.myDsl.PatternComprehension;
import org.xtext.example.mydsl1.myDsl.RelationshipsPattern;
import org.xtext.example.mydsl1.myDsl.VariableDeclaration;
import org.xtext.example.mydsl1.myDsl.Where;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pattern Comprehension</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.PatternComprehensionImpl#getPathVariable <em>Path Variable</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.PatternComprehensionImpl#getPattern <em>Pattern</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.PatternComprehensionImpl#getWhere <em>Where</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.PatternComprehensionImpl#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PatternComprehensionImpl extends ExpressionImpl implements PatternComprehension
{
  /**
   * The cached value of the '{@link #getPathVariable() <em>Path Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPathVariable()
   * @generated
   * @ordered
   */
  protected VariableDeclaration pathVariable;

  /**
   * The cached value of the '{@link #getPattern() <em>Pattern</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPattern()
   * @generated
   * @ordered
   */
  protected RelationshipsPattern pattern;

  /**
   * The cached value of the '{@link #getWhere() <em>Where</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhere()
   * @generated
   * @ordered
   */
  protected Where where;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PatternComprehensionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PATTERN_COMPREHENSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDeclaration getPathVariable()
  {
    return pathVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPathVariable(VariableDeclaration newPathVariable, NotificationChain msgs)
  {
    VariableDeclaration oldPathVariable = pathVariable;
    pathVariable = newPathVariable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE, oldPathVariable, newPathVariable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPathVariable(VariableDeclaration newPathVariable)
  {
    if (newPathVariable != pathVariable)
    {
      NotificationChain msgs = null;
      if (pathVariable != null)
        msgs = ((InternalEObject)pathVariable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE, null, msgs);
      if (newPathVariable != null)
        msgs = ((InternalEObject)newPathVariable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE, null, msgs);
      msgs = basicSetPathVariable(newPathVariable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE, newPathVariable, newPathVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationshipsPattern getPattern()
  {
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPattern(RelationshipsPattern newPattern, NotificationChain msgs)
  {
    RelationshipsPattern oldPattern = pattern;
    pattern = newPattern;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__PATTERN, oldPattern, newPattern);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPattern(RelationshipsPattern newPattern)
  {
    if (newPattern != pattern)
    {
      NotificationChain msgs = null;
      if (pattern != null)
        msgs = ((InternalEObject)pattern).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__PATTERN, null, msgs);
      if (newPattern != null)
        msgs = ((InternalEObject)newPattern).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__PATTERN, null, msgs);
      msgs = basicSetPattern(newPattern, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__PATTERN, newPattern, newPattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Where getWhere()
  {
    return where;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhere(Where newWhere, NotificationChain msgs)
  {
    Where oldWhere = where;
    where = newWhere;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__WHERE, oldWhere, newWhere);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhere(Where newWhere)
  {
    if (newWhere != where)
    {
      NotificationChain msgs = null;
      if (where != null)
        msgs = ((InternalEObject)where).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__WHERE, null, msgs);
      if (newWhere != null)
        msgs = ((InternalEObject)newWhere).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__WHERE, null, msgs);
      msgs = basicSetWhere(newWhere, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__WHERE, newWhere, newWhere));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE:
        return basicSetPathVariable(null, msgs);
      case MyDslPackage.PATTERN_COMPREHENSION__PATTERN:
        return basicSetPattern(null, msgs);
      case MyDslPackage.PATTERN_COMPREHENSION__WHERE:
        return basicSetWhere(null, msgs);
      case MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION:
        return basicSetExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE:
        return getPathVariable();
      case MyDslPackage.PATTERN_COMPREHENSION__PATTERN:
        return getPattern();
      case MyDslPackage.PATTERN_COMPREHENSION__WHERE:
        return getWhere();
      case MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION:
        return getExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE:
        setPathVariable((VariableDeclaration)newValue);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__PATTERN:
        setPattern((RelationshipsPattern)newValue);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__WHERE:
        setWhere((Where)newValue);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION:
        setExpression((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE:
        setPathVariable((VariableDeclaration)null);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__PATTERN:
        setPattern((RelationshipsPattern)null);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__WHERE:
        setWhere((Where)null);
        return;
      case MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION:
        setExpression((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_COMPREHENSION__PATH_VARIABLE:
        return pathVariable != null;
      case MyDslPackage.PATTERN_COMPREHENSION__PATTERN:
        return pattern != null;
      case MyDslPackage.PATTERN_COMPREHENSION__WHERE:
        return where != null;
      case MyDslPackage.PATTERN_COMPREHENSION__EXPRESSION:
        return expression != null;
    }
    return super.eIsSet(featureID);
  }

} //PatternComprehensionImpl
